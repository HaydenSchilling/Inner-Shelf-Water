for (j in sites){
mydata2 <- filter(mydata, site == j)
mydata2 <-  mydata2 %>% drop_na(GeoMn, Depth) %>% filter(GeoMn != Inf)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = GeoMn*1000, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "GeoMn")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = GeoMn)) +
geom_tile(aes(fill = GeoMn)) +
geom_contour(colour = "white") + #, binwidth = 0.125
scale_fill_distiller(palette = "YlOrRd", direction = 1) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("Geometric Mean Size at ", j))
ggsave(paste0('plots/zoop/',j,"_GeoMn",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_GeoMn",'.png'),width = 10, height = 5, dpi = 600)
}
# Interpolating plots
#install.packages("akima")
library(akima)
library(ggplot2)
library(reshape2)
mydata <- read.csv("Data/HYD cleaned 080419.csv")
str(mydata)
head(mydata)
# variables to loop through
vars = c("CTD.Sal", "CTD.Temp", "Oxygen", "Silicate","Nitrate")
#sites to loop through
sites = c("DH", "NS", "EH")
head(mydata)
pTS <- ggplot(mydata, aes(x = CTD.Salt, y = CTD.Temp, col = Nitrate)) + geom_point() + facet_wrap(~site) +
theme_classic() + scale_color_gradientn(colours = jet.colors(100))
pTS
pTS <- ggplot(mydata, aes(x = CTD.Salt, y = CTD.Temp, col = Nitrate)) + geom_point() + facet_wrap(~OPC_site) +
theme_classic() + scale_color_gradientn(colours = jet.colors(100))
pTS
pTS <- ggplot(mydata, aes(x = CTD.Sal, y = CTD.Temp, col = Nitrate)) + geom_point() + facet_wrap(~OPC_site) +
theme_classic() + scale_color_gradientn(colours = jet.colors(100))
pTS
ggsave("plots/zoop/TS plot by Nitrate.pdf", width=10, height=8)
ggsave("plots/zoop/TS plot by Nitrate.png", width=10, height=8, dpi = 600)
# Zooplankton data interpolation
# Interpolating plots
#install.packages("akima")
library(akima)
library(ggplot2)
library(reshape2)
library(tidyverse)
mydata <- read_csv("Data/SS2004_SeaSoarData.csv")
str(mydata)
head(mydata)
mydata <- mydata %>%
mutate(site = case_when(site = str_detect(File,"SS0408_023") ~ "CapeByron",
site = str_detect(File,"SS0408_021") ~ "EvansHead",
site = str_detect(File,"SS0408_010") ~ "NorthSolitary",
site = str_detect(File,"SS0408_008") ~ "DiamondHead"),
site = as.factor(site))
### Get distance from shore
### Get distance from shore
library(geosphere)
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$site[i] == "CapeByron") {
mydata$Distance_Coast[i] = distm(c(153.58, -28.6), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "DiamondHead") {
mydata$Distance_Coast[i] = distm(c(152.75, -31.8), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "EvansHead") {
mydata$Distance_Coast[i] = distm(c(153.48, -29.0), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "NorthSolitary") {
mydata$Distance_Coast[i] = distm(c(153.23, -30.0), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
}
### Get Bathymetry and add distance from coast
Bathy <- read.csv("Data/Transect Bathymetry.csv", header = T)
Bathy <- subset(Bathy, Bathymetry <= 0 & Bathymetry > -200)
mydata <- subset(mydata, Depth < 51)
pTS <- ggplot(mydata, aes(x = Salt, y = Temp, col = log10(Biomass))) + geom_point() + facet_wrap(~site) +
theme_classic() + scale_color_gradientn(colours = jet.colors(100))
pTS
ggsave("plots/zoop/TS plot by log10 biomass top 50.pdf", width=10, height=8)
ggsave("plots/zoop/TS plot by log10 biomass top 50.png", width=10, height=8, dpi = 600)
pTSL <- ggplot(mydata, aes(x = Salt, y = Temp, col = Depth)) + geom_point(alpha = 0.5) + facet_wrap(~site) +
theme_classic() + scale_color_gradientn(colours = jet.colors(100))
pTSL
ggsave("plots/zoop/TS plot by Depth top 50.pdf", width=10, height=8)
ggsave("plots/zoop/TS plot by Depth top 50.png", width=10, height=8, dpi = 600)
pTSD <- ggplot(mydata, aes(x = Salt, y = Temp, col = Depth)) + geom_point(alpha = 0.5) + facet_wrap(~site) +
theme_classic() + scale_color_gradientn(colours = jet.colors(100))
pTSD
ggsave("plots/zoop/TS plot by Depth top 50.pdf", width=10, height=8)
ggsave("plots/zoop/TS plot by Depth top 50.png", width=10, height=8, dpi = 600)
mydata <- subset(mydata, Depth >= 51)
pTS <- ggplot(mydata, aes(x = Salt, y = Temp, col = log10(Biomass))) + geom_point() + facet_wrap(~site) +
theme_classic() + scale_color_gradientn(colours = jet.colors(100))
pTS
# Zooplankton data interpolation
# Interpolating plots
#install.packages("akima")
library(akima)
library(ggplot2)
library(reshape2)
library(tidyverse)
mydata <- read_csv("Data/SS2004_SeaSoarData.csv")
str(mydata)
head(mydata)
mydata <- mydata %>%
mutate(site = case_when(site = str_detect(File,"SS0408_023") ~ "CapeByron",
site = str_detect(File,"SS0408_021") ~ "EvansHead",
site = str_detect(File,"SS0408_010") ~ "NorthSolitary",
site = str_detect(File,"SS0408_008") ~ "DiamondHead"),
site = as.factor(site))
### Get distance from shore
### Get distance from shore
library(geosphere)
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$site[i] == "CapeByron") {
mydata$Distance_Coast[i] = distm(c(153.58, -28.6), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "DiamondHead") {
mydata$Distance_Coast[i] = distm(c(152.75, -31.8), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "EvansHead") {
mydata$Distance_Coast[i] = distm(c(153.48, -29.0), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "NorthSolitary") {
mydata$Distance_Coast[i] = distm(c(153.23, -30.0), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
}
mydata <- subset(mydata, Depth >= 51)
pTS <- ggplot(mydata, aes(x = Salt, y = Temp, col = log10(Biomass))) + geom_point() + facet_wrap(~site) +
theme_classic() + scale_color_gradientn(colours = jet.colors(100))
pTS
ggsave("plots/zoop/TS plot by log10 biomass below 50.pdf", width=10, height=8)
ggsave("plots/zoop/TS plot by log10 biomass below 50.png", width=10, height=8, dpi = 600)
pTSL <- ggplot(mydata, aes(x = Salt, y = Temp, col = Depth)) + geom_point(alpha = 0.5) + facet_wrap(~site) +
theme_classic() + scale_color_gradientn(colours = jet.colors(100))
pTSL
ggsave("plots/zoop/TS plot by Depth below 50.pdf", width=10, height=8)
ggsave("plots/zoop/TS plot by Depth below 50.png", width=10, height=8, dpi = 600)
### Get Bathymetry and add distance from coast
Bathy <- read.csv("Data/Transect Bathymetry.csv", header = T)
Bathy <- subset(Bathy, Bathymetry <= 0 & Bathymetry > -200)
Bathy$Distance_Coast = 0
for (i in 1:nrow(Bathy)){
if (Bathy$site[i] == "CapeByron") {
Bathy$Distance_Coast[i] = distm(c(153.58, -28.6), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "DiamondHead") {
Bathy$Distance_Coast[i] = distm(c(152.75, -31.8), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "EvansHead") {
Bathy$Distance_Coast[i] = distm(c(153.48, -29.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "NorthSolitary") {
Bathy$Distance_Coast[i] = distm(c(153.23, -30.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
}
sitesB = c("DiamondHead", "NorthSolitary", "EvansHead")
### CTD.Sal interpoLation and plots
for (j in sites){
mydata2 <- mydata %>%
filter(site == j & is.na(Depth)==FALSE & is.na(CTD.Sal)==FALSE)
Bathy2 <- filter(Bathy, sitesB == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = , nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "CTD.Sal")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = CTD.Sal)) +
geom_tile(aes(fill = CTD.Sal)) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, limits = c(-0.25,  0.75)) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("CTD.Sal at ", j))
ggsave(paste0('plots/CTD/',j,"_CTD.Sal",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/CTD/',j,"_CTD.Sal",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
library(akima)
library(ggplot2)
library(reshape2)
mydata <- read.csv("Data/HYD cleaned 080419.csv")
str(mydata)
head(mydata)
### Get Bathymetry and add distance from coast
Bathy <- read.csv("Data/Transect Bathymetry.csv", header = T)
Bathy <- subset(Bathy, Bathymetry <= 0 & Bathymetry > -200)
Bathy$Distance_Coast = 0
for (i in 1:nrow(Bathy)){
if (Bathy$site[i] == "CapeByron") {
Bathy$Distance_Coast[i] = distm(c(153.58, -28.6), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "DiamondHead") {
Bathy$Distance_Coast[i] = distm(c(152.75, -31.8), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "EvansHead") {
Bathy$Distance_Coast[i] = distm(c(153.48, -29.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "NorthSolitary") {
Bathy$Distance_Coast[i] = distm(c(153.23, -30.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
}
### CTD.Sal interpoLation and plots
for (j in sites){
mydata2 <- mydata %>%
filter(site == j & is.na(Depth)==FALSE & is.na(CTD.Sal)==FALSE)
Bathy2 <- filter(Bathy, sitesB == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = , nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "CTD.Sal")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = CTD.Sal)) +
geom_tile(aes(fill = CTD.Sal)) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, limits = c(-0.25,  0.75)) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("CTD.Sal at ", j))
ggsave(paste0('plots/CTD/',j,"_CTD.Sal",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/CTD/',j,"_CTD.Sal",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
### CTD.Sal interpoLation and plots
for (j in sites){
mydata2 <- mydata %>%
filter(OPC_site == j & is.na(Depth)==FALSE & is.na(CTD.Sal)==FALSE)
Bathy2 <- filter(Bathy, sitesB == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = , nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "CTD.Sal")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = CTD.Sal)) +
geom_tile(aes(fill = CTD.Sal)) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, limits = c(-0.25,  0.75)) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("CTD.Sal at ", j))
ggsave(paste0('plots/CTD/',j,"_CTD.Sal",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/CTD/',j,"_CTD.Sal",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
### CTD.Sal interpoLation and plots ---- need to fix indexing
for (j in 1:length(sites)){
mydata2 <- mydata %>%
filter(OPC_site == sites[j] & is.na(Depth)==FALSE)
Bathy2 <- filter(Bathy, site == sitesB[j])
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = CTD.Sal, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "CTD.Sal")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = CTD.Sal)) +
geom_tile(data = df, aes(fill = CTD.Sal)) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "RdBu", direction = -1, limits = c(-2,  2)) +
#geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("CTD.Sal at ", sites[j]))
ggsave(paste0('plots/CTD/',sites[j],"_CTD.Sal",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/CTS/',sites[j],"_CTD.Sal",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
# Interpolating plots
#install.packages("akima")
library(akima)
library(ggplot2)
library(reshape2)
mydata <- read.csv("Data/HYD cleaned 080419.csv")
str(mydata)
head(mydata)
### Get Bathymetry and add distance from coast
Bathy <- read.csv("Data/Transect Bathymetry.csv", header = T)
Bathy <- subset(Bathy, Bathymetry <= 0 & Bathymetry > -200)
Bathy$Distance_Coast = 0
for (i in 1:nrow(Bathy)){
if (Bathy$site[i] == "CapeByron") {
Bathy$Distance_Coast[i] = distm(c(153.58, -28.6), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "DiamondHead") {
Bathy$Distance_Coast[i] = distm(c(152.75, -31.8), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "EvansHead") {
Bathy$Distance_Coast[i] = distm(c(153.48, -29.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "NorthSolitary") {
Bathy$Distance_Coast[i] = distm(c(153.23, -30.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
}
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$OPC_site[i] == "CB") {
mydata$Distance_Coast[i] = distm(c(153.58, -28.6), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$OPC_site[i] == "DH") {
mydata$Distance_Coast[i] = distm(c(152.75, -31.8), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$OPC_site[i] == "EH") {
mydata$Distance_Coast[i] = distm(c(153.48, -29.0), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$OPC_site[i] == "NS") {
mydata$Distance_Coast[i] = distm(c(153.23, -30.0), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
}
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
#if (mydata$OPC_site[i] == "CB") {
#  mydata$Distance_Coast[i] = distm(c(153.58, -28.6), c(mydata$long3[i], mydata$lat3[i]), fun = distHaversine)
}
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
#if (mydata$OPC_site[i] == "CB") {
#  mydata$Distance_Coast[i] = distm(c(153.58, -28.6), c(mydata$long3[i], mydata$lat3[i]), fun = distHaversine)
#}
if (mydata$OPC_site[i] == "DH") {
mydata$Distance_Coast[i] = distm(c(152.75, -31.8), c(mydata$long3[i], mydata$lat3[i]), fun = distHaversine)
}
if (mydata$OPC_site[i] == "EH") {
mydata$Distance_Coast[i] = distm(c(153.48, -29.0), c(mydata$long3[i], mydata$lat3[i]), fun = distHaversine)
}
if (mydata$OPC_site[i] == "NS") {
mydata$Distance_Coast[i] = distm(c(153.23, -30.0), c(mydata$long3[i], mydata$lat3[i]), fun = distHaversine)
}
}
### Get Bathymetry and add distance from coast
Bathy <- read.csv("Data/Transect Bathymetry.csv", header = T)
Bathy <- subset(Bathy, Bathymetry <= 0 & Bathymetry > -200)
Bathy$Distance_Coast = 0
for (i in 1:nrow(Bathy)){
if (Bathy$site[i] == "CapeByron") {
Bathy$Distance_Coast[i] = distm(c(153.58, -28.6), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "DiamondHead") {
Bathy$Distance_Coast[i] = distm(c(152.75, -31.8), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "EvansHead") {
Bathy$Distance_Coast[i] = distm(c(153.48, -29.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "NorthSolitary") {
Bathy$Distance_Coast[i] = distm(c(153.23, -30.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
}
# variables to loop through
vars = c("CTD.Sal", "CTD.Temp", "Oxygen", "Silicate","Nitrate")
#sites to loop through
sites = c("DH", "NS", "EH")
sitesB = c("DiamondHead", "NorthSolitary", "EvansHead")
### CTD.Sal interpoLation and plots ---- need to fix indexing
for (j in 1:length(sites)){
mydata2 <- mydata %>%
filter(OPC_site == sites[j] & is.na(Depth)==FALSE)
Bathy2 <- filter(Bathy, site == sitesB[j])
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = CTD.Sal, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "CTD.Sal")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = CTD.Sal)) +
geom_tile(data = df, aes(fill = CTD.Sal)) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "RdBu", direction = -1, limits = c(-2,  2)) +
#geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("CTD.Sal at ", sites[j]))
ggsave(paste0('plots/CTD/',sites[j],"_CTD.Sal",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/CTS/',sites[j],"_CTD.Sal",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
sites[j]
### CTD.Sal interpoLation and plots ---- need to fix indexing
for (j in 1:length(sites)){
mydata2 <- mydata %>%
filter(OPC_site == sites[j] & is.na(Depth)==FALSE)
Bathy2 <- filter(Bathy, site == sitesB[j])
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = CTD.Sal, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "CTD.Sal")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = CTD.Sal)) +
geom_tile(data = df, aes(fill = CTD.Sal)) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "RdBu", direction = -1, limits = c(-2,  2)) +
#geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("CTD.Sal at ", sites[j]))
ggsave(paste0('plots/CTD/',sites[j],"_CTD_Sal",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/CTS/',sites[j],"_CTD_Sal",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = CTD.Sal)) +
geom_tile(data = df, aes(fill = CTD.Sal)) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "RdBu", direction = -1, limits = c(-2,  2)) +
#geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("CTD.Sal at ", sites[j]))
### CTD.Sal interpoLation and plots ---- need to fix indexing
for (j in 1:length(sites)){
mydata2 <- mydata %>%
filter(OPC_site == sites[j] & is.na(Depth)==FALSE)
Bathy2 <- filter(Bathy, site == sitesB[j])
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = CTD.Sal, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "CTD.Sal")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = CTD.Sal)) +
geom_tile(data = df, aes(fill = CTD.Sal)) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "RdBu", direction = -1, limits = c(min(mydata$CTD.Sal),max(mydata$CTD.Sal))) +
#geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("CTD.Sal at ", sites[j]))
ggsave(paste0('plots/CTD/',sites[j],"_CTD_Sal",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/CTS/',sites[j],"_CTD_Sal",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = CTD.Sal)) +
geom_tile(data = df, aes(fill = CTD.Sal)) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "RdBu", direction = -1, limits = c(min(mydata$CTD.Sal),max(mydata$CTD.Sal))) +
#geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("CTD.Sal at ", sites[j]))
View(mydata)
ggsave(paste0('plots/CTD/',sites[j],"_CTD_Sal",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/CTS/',sites[j],"_CTD_Sal",'.png'),width = 10, height = 5, dpi = 600)
