### Temperature #  done
for (j in sites){
mydata2 <- filter(mydata, site == j)
mydata2 <-  mydata2 %>% drop_na(Temp) %>% filter(Temp != Inf)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = Temp, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "Temp")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = Temp)) +
geom_tile(aes(fill = Temp)) +
geom_contour(colour = "white", binwidth = 1) + #, binwidth = 0.125
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(min(mydata$Temp), max(mydata$Temp))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth),alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast, ymax = Bathymetry, ymin=-250), inherit.aes = FALSE, fill = "grey60") +
ggtitle(paste0("Temperature at ", j))
ggsave(paste0('plots/zoop/',j,"_Temperature",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_Temperature",'.png'),width = 10, height = 5, dpi = 600)
}
### Biomass interpoLation and plots
for (j in sites){
mydata2 <- mydata %>%
filter(site == j & is.na(Depth)==FALSE & is.na(Biomass)==FALSE)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = log10(Biomass), nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "Biomass")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-0.25,  0.75)) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("Biomass at ", j))
ggsave(paste0('plots/zoop/',j,"_Biomass",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_Biomass",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
### Biomass interpoLation and plots
for (j in sites){
mydata2 <- mydata %>%
filter(site == j & is.na(Depth)==FALSE & is.na(Biomass)==FALSE)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = log10(Biomass), nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "Biomass")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "Spectral", direction = -1,
limits = c(min(log10(mydata$Biomass, na.rm = TRUE)), max(log10(mydata$Biomass), na.rm = TRUE))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("Biomass at ", j))
ggsave(paste0('plots/zoop/',j,"_Biomass",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_Biomass",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
### Biomass interpoLation and plots
for (j in sites){
mydata2 <- mydata %>%
filter(site == j & is.na(Depth)==FALSE & is.na(Biomass)==FALSE)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = log10(Biomass), nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "Biomass")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "Spectral", direction = -1,
limits = c(min(log10(mydata$Biomass), na.rm = TRUE), max(log10(mydata$Biomass), na.rm = TRUE))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("Biomass at ", j))
ggsave(paste0('plots/zoop/',j,"_Biomass",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_Biomass",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
### Biomass interpoLation and plots
for (j in sites){
mydata2 <- mydata %>%
filter(site == j & is.na(Depth)==FALSE & is.na(Biomass)==FALSE)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = log10(Biomass), nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "Biomass")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "Spectral", direction = -1) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("Biomass at ", j))
ggsave(paste0('plots/zoop/',j,"_Biomass",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_Biomass",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
### Biomass interpoLation and plots
for (j in sites){
mydata2 <- mydata %>%
filter(site == j & is.na(Depth)==FALSE & is.na(Biomass)==FALSE)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = log10(Biomass), nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "Biomass")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-0.3,  0.5)) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_line(data= Bathy2, aes(x = Distance_Coast, y = Bathymetry), inherit.aes = FALSE) +
ggtitle(paste0("Biomass at ", j))
ggsave(paste0('plots/zoop/',j,"_Biomass",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_Biomass",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
### Biomass interpoLation and plots
for (j in sites){
mydata2 <- mydata %>%
filter(site == j & is.na(Depth)==FALSE & is.na(Biomass)==FALSE)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = log10(Biomass), nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "Biomass")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-0.3,  0.5)) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast, ymax = Bathymetry, ymin=-300), inherit.aes = FALSE, fill = "grey60") +
ggtitle(paste0("Biomass at ", j)) + theme_classic()
ggsave(paste0('plots/zoop/',j,"_Biomass",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_Biomass",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
### Biomass interpoLation and plots
for (j in sites){
mydata2 <- mydata %>%
filter(site == j & is.na(Depth)==FALSE & is.na(Biomass)==FALSE)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = log10(Biomass), nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "Biomass")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-0.3,  0.5)) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
ggtitle(paste0("Biomass at ", j)) + theme_classic()
ggsave(paste0('plots/zoop/',j,"_Biomass",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_Biomass",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
Bathy <- subset(Bathy, Bathymetry < -1 & Bathymetry >= -200)
Bathy$Distance_Coast = 0
for (i in 1:nrow(Bathy)){
if (Bathy$site[i] == "CapeByron") {
Bathy$Distance_Coast[i] = distm(c(153.58, -28.6), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "DiamondHead") {
Bathy$Distance_Coast[i] = distm(c(152.75, -31.8), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "EvansHead") {
Bathy$Distance_Coast[i] = distm(c(153.48, -29.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "NorthSolitary") {
Bathy$Distance_Coast[i] = distm(c(153.23, -30.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
}
### Biomass interpoLation and plots
for (j in sites){
mydata2 <- mydata %>%
filter(site == j & is.na(Depth)==FALSE & is.na(Biomass)==FALSE)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = log10(Biomass), nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "Biomass")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-0.3,  0.5)) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth, alpha = 0.5)) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
ggtitle(paste0("Biomass at ", j)) + theme_classic()
ggsave(paste0('plots/zoop/',j,"_Biomass",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_Biomass",'.png'),width = 10, height = 5, dpi = 600)
# pdf(paste0('plots/zoop/',j,"_Biomass",'.pdf'), width=10, height=5)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
# png(paste0('plots/zoop/',j,"_Biomass",'.png'), width=6000, height=3000, res = 600)
# print(filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass))),
#       plot.title = title(main = c(j)))
# dev.off()
}
### Pareto Slope #  done
for (j in sites){
mydata2 <- filter(mydata, site == j)
mydata2 <-  mydata2 %>% drop_na(ParetoSlope) %>% filter(ParetoSlope != Inf)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = ParetoSlope, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "ParetoSlope")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = ParetoSlope)) +
geom_tile(aes(fill = ParetoSlope)) +
geom_contour(colour = "white") + #, binwidth = 0.125
scale_fill_distiller(palette = "Spectral", direction = 1, limits = c(min(mydata$ParetoSlope), max(mydata$ParetoSlope))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth),alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
ggtitle(paste0("Pareto Slope at ", j))
ggsave(paste0('plots/zoop/',j,"_Pareto_Slope",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_Pareto_Slope",'.png'),width = 10, height = 5, dpi = 600)
}
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = ParetoSlope)) +
geom_tile(aes(fill = ParetoSlope)) +
geom_contour(colour = "white") + #, binwidth = 0.125
scale_fill_distiller(palette = "Spectral", direction = 1, limits = c(min(mydata$ParetoSlope), max(mydata$ParetoSlope))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth),alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
ggtitle(paste0("Pareto Slope at ", j)) + theme_classic()
### Pareto Slope #  done
for (j in sites){
mydata2 <- filter(mydata, site == j)
mydata2 <-  mydata2 %>% drop_na(ParetoSlope) %>% filter(ParetoSlope != Inf)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = ParetoSlope, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "ParetoSlope")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = ParetoSlope)) +
geom_tile(aes(fill = ParetoSlope)) +
geom_contour(colour = "white") + #, binwidth = 0.125
scale_fill_distiller(palette = "Spectral", direction = 1, limits = c(min(mydata$ParetoSlope), max(mydata$ParetoSlope))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth),alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
ggtitle(paste0("Pareto Slope at ", j)) + theme_classic()
ggsave(paste0('plots/zoop/',j,"_Pareto_Slope",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_Pareto_Slope",'.png'),width = 10, height = 5, dpi = 600)
}
cor.test(Temp, Salt, data = mydata)
cor.test(mydata$Temp, mydata$Salt)
cor.test(mydata$Temp, mydata$Depth)
cor.test(mydata$Temp, mydata$Distance_Coast)
cor.test(mydata$Temp, mydata$site)
cor(mydata$Temp, mydata$site)
fit1 <- lm(Biomass ~ Temp + Depth + site + Distance_Coast, data = mydata)
summary(fit1)
plot(fit1)
plot(fit1)
fit1 <- lm(log10(Biomass) ~ Temp + Depth + site + Distance_Coast, data = mydata)
plot(fit1)
summary(fit1)
library(effects)
plot(allEffects(fit1))
fit1 <- lm(log10(Biomass) ~ Temp + Depth + site + Distance_Coast + Longitude, data = mydata)
str(mydata)
fit1 <- lm(log10(Biomass) ~ Temp + Depth + site + Distance_Coast + Lon, data = mydata)
plot(fit1)
summary(fit1)
cor.test(mydata$Lon, mydata$Distance_Coast)
fit1 <- lm(log10(Biomass) ~ Temp + Depth + Distance_Coast + site*Lon, data = mydata)
plot(fit1)
summary(fit1)
plot(allEffects(fit1))
fit1 <- lm(log10(Biomass) ~ Temp*Depth + Distance_Coast + site*Lon, data = mydata)
plot(fit1)
summary(fit1)
plot(allEffects(fit1))
### Spatial Autocorrelation Morans I
library(lctools)
install.packages("lctools")
### Spatial Autocorrelation Morans I
library(lctools)
res <- residuals(fit1)
Coords <-cbind(mydata$Lat, mydata$Lon)
bw <- 10
mI <-moransI(Coords,bw,res)
fit1 <- lm(log10(Biomass) ~ Temp*Depth + Distance_Coast + site*Lon, data = mydata)
Coords <-cbind(mydata$Lat, mydata$Lon)
bw <- 10
mI <-moransI(Coords,bw,res)
View(Coords)
View(mydata)
mydataX <- mydata %<% drop_na(Biomass)
fit1 <- lm(log10(Biomass) ~ Temp*Depth + Distance_Coast + site*Lon, data = mydataX)
mydataX <- mydata %>% drop_na(Biomass)
fit1 <- lm(log10(Biomass) ~ Temp*Depth + Distance_Coast + site*Lon, data = mydataX)
plot(fit1)
summary(fit1)
res <- residuals(fit1)
mI <-moransI(Coords,bw,res)
Coords <-cbind(mydataX$Lat, mydataX$Lon)
res <- residuals(fit1)
mI <-moransI(Coords,bw,res)
moran.table <-matrix(data=NA,nrow=1,ncol=6)
col.names <-c("Moran's I", "Expected I", "Z resampling", "P-value resampling","Z randomization", "P-value randomization")
colnames(moran.table) <- col.names
moran.table[1,1] <- mI$Morans.I
moran.table[1,2] <- mI$Expected.I
moran.table[1,3] <- mI$z.resampling
moran.table[1,4] <- mI$p.value.resampling
moran.table[1,5] <- mI$z.randomization
moran.table[1,6] <- mI$p.value.randomization
print(moran.table)
bw <- 6
mI <-moransI(Coords,bw,res)
moran.table <-matrix(data=NA,nrow=1,ncol=6)
col.names <-c("Moran's I", "Expected I", "Z resampling", "P-value resampling","Z randomization", "P-value randomization")
colnames(moran.table) <- col.names
moran.table[1,1] <- mI$Morans.I
moran.table[1,2] <- mI$Expected.I
moran.table[1,3] <- mI$z.resampling
moran.table[1,4] <- mI$p.value.resampling
moran.table[1,5] <- mI$z.randomization
moran.table[1,6] <- mI$p.value.randomization
print(moran.table)
bw <- 20
mI <-moransI(Coords,bw,res)
moran.table <-matrix(data=NA,nrow=1,ncol=6)
col.names <-c("Moran's I", "Expected I", "Z resampling", "P-value resampling","Z randomization", "P-value randomization")
colnames(moran.table) <- col.names
moran.table[1,1] <- mI$Morans.I
moran.table[1,2] <- mI$Expected.I
moran.table[1,3] <- mI$z.resampling
moran.table[1,4] <- mI$p.value.resampling
moran.table[1,5] <- mI$z.randomization
moran.table[1,6] <- mI$p.value.randomization
print(moran.table)
install.packages("marmap")
library(marmap)
summary(fit1)
fit2 <- lm(ParetoSlope ~ Temp*Depth + Distance_Coast + site*Lon, data = mydata)
plot(fit2)
summary(fit2)
res <- residuals(fit2)
Coords <-cbind(mydataX$Lat, mydataX$Lon)
bw <- 10
mI <-moransI(Coords,bw,res)
moran.table <-matrix(data=NA,nrow=1,ncol=6)
col.names <-c("Moran's I", "Expected I", "Z resampling", "P-value resampling","Z randomization", "P-value randomization")
colnames(moran.table) <- col.names
moran.table[1,1] <- mI$Morans.I
moran.table[1,2] <- mI$Expected.I
moran.table[1,3] <- mI$z.resampling
moran.table[1,4] <- mI$p.value.resampling
moran.table[1,5] <- mI$z.randomization
moran.table[1,6] <- mI$p.value.randomization
print(moran.table)
plot(allEffects(fit2))
plot(allEffects(fit1))
### Geo_Mn Size #  done
### interpoLation and plots
for (j in sites){
mydata2 <- filter(mydata, site == j)
mydata2 <-  mydata2 %>% drop_na(GeoMn, Depth) %>% filter(GeoMn != Inf)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = GeoMn*1000, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "GeoMn")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = GeoMn)) +
geom_tile(aes(fill = GeoMn)) +
geom_contour(colour = "white") + #, binwidth = 0.125
scale_fill_distiller(palette = "YlOrRd", direction = 1,
limits = c(min(mydata$GeoMn*1000, na.rm = TRUE), max(mydata$GeoMn*1000, na.rm = TRUE))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
ggtitle(paste0("Geometric Mean Size at ", j))
ggsave(paste0('plots/zoop/',j,"_GeoMn",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_GeoMn",'.png'),width = 10, height = 5, dpi = 600)
}
### Geo_Mn Size #  done
### interpoLation and plots
for (j in sites){
mydata2 <- filter(mydata, site == j)
mydata2 <-  mydata2 %>% drop_na(GeoMn, Depth) %>% filter(GeoMn != Inf)
Bathy2 <- filter(Bathy, site == j)
#fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass),
#               nx = 100, ny = 100)
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = GeoMn*1000, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "GeoMn")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = GeoMn)) +
geom_tile(aes(fill = GeoMn)) +
geom_contour(colour = "white") + #, binwidth = 0.125
scale_fill_distiller(palette = "Spectral", direction = 1, # "YlOrRd"
limits = c(min(mydata$GeoMn*1000, na.rm = TRUE), max(mydata$GeoMn*1000, na.rm = TRUE))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth), alpha = 0.5) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
ggtitle(paste0("Geometric Mean Size at ", j))
ggsave(paste0('plots/zoop/',j,"_GeoMn",'.pdf'),width = 10, height = 5)
ggsave(paste0('plots/zoop/',j,"_GeoMn",'.png'),width = 10, height = 5, dpi = 600)
}
plot(allEffects(fit2))
fit3 <- lm(GeoMn ~ Temp*Depth + Distance_Coast + site*Lon, data = mydata)
plot(fit3)
summary(fit3)
plot(allEffects(fit3))
fit3 <- lm(GeoMn*1000 ~ Temp*Depth + Distance_Coast + site*Lon, data = mydata)
summary(fit3)
plot(allEffects(fit3))
