r_stack <- stack(r_stack, temp)
}
#r_stack <- aggregate(elev2, fact=10, fun=mean, expand=TRUE)
r_stack <- disaggregate(r_stack, fact=10, method = "bilinear") # Matt suggested dissagregation but not sure why i want to increase resolution
#calculate mean value across raster
r_stack <- calc(r_stack, fun=function(x) mean(x, na.rm=T))
r_stack <- as.data.frame(r_stack, row.names=NULL, optional=FALSE, xy=TRUE, na.rm=FALSE)
colnames(r_stack)[1] <- "Distance_Coast"
colnames(r_stack)[2] <- "Depth"
colnames(r_stack)[3] <- "Biomass"
ggplot(data = r_stack, mapping = aes(x = Distance_Coast/1000, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) + ylab("Depth (m)") +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
#geom_text_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(1,  3), oob = scales::squish) +
#geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
#geom_text(x = 12010, y = -185, label = paste0("Biomass at ", j[1]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black")) +
xlab(element_blank()) +
scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
guides(size = "none", shape = "none") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 16))
ggsave("plots/zoop/Biomass combined interpolation aggregated.png", width = 21, height = 14.8, units = "cm", dpi = 600)
#create raster stack and average
df.grid <- expand.grid(Distance_Coast = xseq, Depth = yseq)
coordinates(df.grid) <- ~ Distance_Coast + Depth
gridded(df.grid) <- TRUE
r.grid <- raster(df.grid)
r_stack <- stack()
for(i in unique(plot_output$plot)){
temp <- subset(plot_output, plot == i)
coordinates(temp) <- ~ Distance_Coast + Depth
temp <- rasterize(x = temp, y = r.grid, field = "Biomass")
r_stack <- stack(r_stack, temp)
}
#r_stack <- aggregate(elev2, fact=10, fun=mean, expand=TRUE)
r_stack <- disaggregate(r_stack, fact=4, method = "bilinear") # Matt suggested dissagregation but not sure why i want to increase resolution
#calculate mean value across raster
r_stack <- calc(r_stack, fun=function(x) mean(x, na.rm=F))
r_stack <- as.data.frame(r_stack, row.names=NULL, optional=FALSE, xy=TRUE, na.rm=FALSE)
colnames(r_stack)[1] <- "Distance_Coast"
colnames(r_stack)[2] <- "Depth"
colnames(r_stack)[3] <- "Biomass"
ggplot(data = r_stack, mapping = aes(x = Distance_Coast/1000, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) + ylab("Depth (m)") +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
#geom_text_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(1,  3), oob = scales::squish) +
#geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
#geom_text(x = 12010, y = -185, label = paste0("Biomass at ", j[1]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black")) +
xlab(element_blank()) +
scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
guides(size = "none", shape = "none") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 16))
ggplot(data = r_stack, mapping = aes(x = Distance_Coast/1000, y = Depth, z = log10(Biomass))) +
ggplot(data = r_stack, mapping = aes(x = Distance_Coast/1000, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) + ylab("Depth (m)") +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
#geom_text_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1) + #, limits = c(1,  3), oob = scales::squish)
#geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
#geom_text(x = 12010, y = -185, label = paste0("Biomass at ", j[1]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black")) +
xlab(element_blank()) +
scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
guides(size = "none", shape = "none") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 16))
ggsave("plots/zoop/Biomass combined interpolation overlap area.png", width = 21, height = 14.8, units = "cm", dpi = 600)
#create raster stack and average
df.grid <- expand.grid(Distance_Coast = xseq, Depth = yseq)
coordinates(df.grid) <- ~ Distance_Coast + Depth
gridded(df.grid) <- TRUE
r.grid <- raster(df.grid)
r_stack <- stack()
for(i in unique(plot_output$plot)){
temp <- subset(plot_output, plot == i)
coordinates(temp) <- ~ Distance_Coast + Depth
temp <- rasterize(x = temp, y = r.grid, field = "Biomass")
r_stack <- stack(r_stack, temp)
}
#r_stack <- aggregate(elev2, fact=10, fun=mean, expand=TRUE)
r_stack <- disaggregate(r_stack, fact=4, method = "bilinear") # Matt suggested dissagregation but not sure why i want to increase resolution
#calculate mean value across raster
r_stack <- calc(r_stack, fun=function(x) mean(x, na.rm=F))
r_stack <- as.data.frame(r_stack, row.names=NULL, optional=FALSE, xy=TRUE, na.rm=T)
colnames(r_stack)[1] <- "Distance_Coast"
colnames(r_stack)[2] <- "Depth"
colnames(r_stack)[3] <- "Biomass"
ggplot(data = r_stack, mapping = aes(x = Distance_Coast/1000, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) + ylab("Depth (m)") +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
#geom_text_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1) + #, limits = c(1,  3), oob = scales::squish)
#geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
#geom_text(x = 12010, y = -185, label = paste0("Biomass at ", j[1]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black")) +
xlab(element_blank()) +
scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
guides(size = "none", shape = "none") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 16))
ggplot(data = r_stack, mapping = aes(x = Distance_Coast/1000, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) + ylab("Depth (m)") +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
#geom_text_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1) + #, limits = c(1,  3), oob = scales::squish)
#geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
#geom_text(x = 12010, y = -185, label = paste0("Biomass at ", j[1]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black")) +
xlab(element_blank()) +
scale_x_continuous(limits = c(15, 40), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
guides(size = "none", shape = "none") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 16))
ggplot(data = r_stack, mapping = aes(x = Distance_Coast/1000, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) + ylab("Depth (m)") +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
#geom_text_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1) + #, limits = c(1,  3), oob = scales::squish)
#geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
#geom_text(x = 12010, y = -185, label = paste0("Biomass at ", j[1]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black")) +
xlab(element_blank()) +
scale_x_continuous(limits = c(15, 40), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
guides(size = "none", shape = "none") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 16)) +
xlab("Distance from coast (km)")
ggsave("plots/zoop/Biomass combined interpolation overlap area.png", width = 21, height = 14.8, units = "cm", dpi = 600)
# Zooplankton data interpolation
# Interpolating plots
library(akima)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(patchwork)
library(metR)
library(geosphere)
library(sp)
library(raster)
mydata <- read_csv("Data/SS2004_SeaSoarData.csv")
str(mydata)
head(mydata)
mydata <- mydata %>%
mutate(site = case_when(site = str_detect(File,"SS0408_023") ~ "CapeByron",
site = str_detect(File,"SS0408_021") ~ "EvansHead",
site = str_detect(File,"SS0408_010") ~ "NorthSolitary",
site = str_detect(File,"SS0408_008") ~ "DiamondHead"),
site = as.factor(site))
### Get distance from shore
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$site[i] == "CapeByron") {
mydata$Distance_Coast[i] = distm(c(153.58, -28.6), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "DiamondHead") {
mydata$Distance_Coast[i] = distm(c(152.75, -31.8), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "EvansHead") {
mydata$Distance_Coast[i] = distm(c(153.48, -29.0), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "NorthSolitary") {
mydata$Distance_Coast[i] = distm(c(153.23, -30.0), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
}
### Get Bathymetry and add distance from coast
Bathy <- read.csv("Data/Transect Bathymetry.csv", header = T)
Bathy <- subset(Bathy, Bathymetry < -1 & Bathymetry >= -200)
Bathy$Distance_Coast = 0
for (i in 1:nrow(Bathy)){
if (Bathy$site[i] == "CapeByron") {
Bathy$Distance_Coast[i] = distm(c(153.58, -28.6), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "DiamondHead") {
Bathy$Distance_Coast[i] = distm(c(152.75, -31.8), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "EvansHead") {
Bathy$Distance_Coast[i] = distm(c(153.48, -29.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "NorthSolitary") {
Bathy$Distance_Coast[i] = distm(c(153.23, -30.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
}
# # variables to loop through
# vars = c("Temp", "Salt","GeoMn")# "NBSS.Slope",
# #sites to loop through
sites <- levels(mydata$site)
sites <- sites[c(1,3,4,2)]
### Biomass interpoLation and plots
pl <- list()
plot_output <- data.frame()
for (j in sites){
mydata2 <- mydata %>%
filter(site == j & is.na(Depth) == FALSE & is.na(Biomass)==FALSE) %>%
dplyr::select(c(Distance_Coast, Depth, Biomass, cast_no, Temp))
# Get the max depth of each cast
Limits <- mydata2 %>%
group_by(cast_no) %>%
summarise(maxD = max(Depth),
minD = min(Depth),
Distance_Coast = Distance_Coast[1]) %>%
ungroup()
Limits2 <- tibble(maxD = c(150, 150),
minD = c(0, 0),
Distance_Coast = c(max(Limits$Distance_Coast), min(Limits$Distance_Coast)),
cast_no = c(max(Limits$cast_no), max(Limits$cast_no)))
Limits <- Limits[order(Limits$Distance_Coast),]
Limits <- rbind(Limits, Limits2)
Bathy2 <- filter(Bathy, site == j)
xseq <- seq(min(mydata$Distance_Coast)-1, max(mydata$Distance_Coast)+1, length.out = 200)
yseq <- seq(min(mydata$Depth)*(-1)-1, max(mydata$Depth)*(-1)+1, length.out = 200)
fit1 <- with(mydata2, akima::interp(x = Distance_Coast, y = -Depth, z = Biomass, xo=xseq, yo=yseq))
fit2 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = Temp, nx=100, xo=xseq, yo=yseq))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "Biomass")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
df2 <- melt(fit2$z, na.rm = TRUE)
names(df2) <- c("x", "y", "Temp")
df$Temp <- df2$Temp
df$plot <- as.factor(paste(j))
plot_output <- rbind(plot_output, df)
pl[[j]] <- ggplot(data = df, mapping = aes(x = Distance_Coast/1000, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) + ylab("Depth (m)") +
geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
geom_text_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(1,  3), oob = scales::squish) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth), alpha = 0.5, size = 0.2) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth, alpha = 0.5), size = 0.1, show.legend = FALSE) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
geom_text(x = 12010, y = -185, label = paste0("Biomass at ", j[1]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black")) +
xlab(element_blank()) +
scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
guides(size = "none", shape = "none")
# + geom_polygon(data = Limits, mapping = aes(x = Distance_Coast, y = -maxD), inherit.aes = FALSE, colour = "white")
}
pl[[4]] <- pl[[4]] + xlab("Distance from Coastline (km)")
pl[[1]] + pl[[2]] + pl[[3]] + pl[[4]] + plot_layout(ncol = 1, guides = 'collect')
#create raster stack and average
df.grid <- expand.grid(Distance_Coast = xseq, Depth = yseq)
coordinates(df.grid) <- ~ Distance_Coast + Depth
gridded(df.grid) <- TRUE
r.grid <- raster(df.grid)
r_stack <- stack()
for(i in unique(plot_output$plot)){
temp <- subset(plot_output, plot == i)
coordinates(temp) <- ~ Distance_Coast + Depth
temp <- rasterize(x = temp, y = r.grid, field = "Biomass")
r_stack <- stack(r_stack, temp)
}
#r_stack <- aggregate(elev2, fact=10, fun=mean, expand=TRUE)
r_stack <- disaggregate(r_stack, fact=4, method = "bilinear") # Matt suggested dissagregation but not sure why i want to increase resolution
#calculate mean value across raster
r_stack <- calc(r_stack, fun=function(x) mean(x, na.rm=F))
r_stack <- as.data.frame(r_stack, row.names=NULL, optional=FALSE, xy=TRUE, na.rm=T)
colnames(r_stack)[1] <- "Distance_Coast"
colnames(r_stack)[2] <- "Depth"
colnames(r_stack)[3] <- "Biomass"
ggplot(data = r_stack, mapping = aes(x = Distance_Coast/1000, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) + ylab("Depth (m)") +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
#geom_text_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1) + #, limits = c(1,  3), oob = scales::squish)
#geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
#geom_text(x = 12010, y = -185, label = paste0("Biomass at ", j[1]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black")) +
xlab(element_blank()) +
scale_x_continuous(limits = c(15, 40), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
guides(size = "none", shape = "none") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 16)) +
xlab("Distance from coast (km)")
test_df <- tibble(Layer = names(r_stack), Biomass = as.numeric(getZ(r_stack)))
test_df <- tibble(Layer = names(r_stack), date = as.Date(getZ(r_stack)))
#create raster stack and average
df.grid <- expand.grid(Distance_Coast = xseq, Depth = yseq)
coordinates(df.grid) <- ~ Distance_Coast + Depth
gridded(df.grid) <- TRUE
r.grid <- raster(df.grid)
r_stack <- stack()
for(i in unique(plot_output$plot)){
temp <- subset(plot_output, plot == i)
coordinates(temp) <- ~ Distance_Coast + Depth
temp <- rasterize(x = temp, y = r.grid, field = "Biomass")
r_stack <- stack(r_stack, temp)
}
#r_stack <- aggregate(elev2, fact=10, fun=mean, expand=TRUE)
r_stack <- disaggregate(r_stack, fact=4, method = "bilinear") # Matt suggested dissagregation but not sure why i want to increase resolution
test_df <- tibble(Layer = names(r_stack), date = as.Date(getZ(r_stack)))
test_df <- tibble(Layer = names(r_stack), Biomass = as.numeric(getZ(r_stack)))
test_df <- tibble(Layer = names(r_stack), biomass = getZ(r_stack))
test_df <- as.tibble(Layer = names(r_stack), biomass = getZ(r_stack))
test_df <- as.tibble(r_stack, Layer = names(r_stack), biomass = getZ(r_stack))
?mean()
test_x <- c(NA, 4 , 5, 6, 7, 8, 9, NA)
mean(test_x)
mean(test_x, na.rm=T)
sum(is.na(test_x))
# a function to calculate mean sometimes:
meanIgnoringTwoNA <- function(x) {
if (sum(is.na(x)) >= 3){
mean(x, na.rm=T)
}
else{
mean(x, na.rm=F)
}
}
#create raster stack and average
df.grid <- expand.grid(Distance_Coast = xseq, Depth = yseq)
coordinates(df.grid) <- ~ Distance_Coast + Depth
gridded(df.grid) <- TRUE
r.grid <- raster(df.grid)
r_stack <- stack()
for(i in unique(plot_output$plot)){
temp <- subset(plot_output, plot == i)
coordinates(temp) <- ~ Distance_Coast + Depth
temp <- rasterize(x = temp, y = r.grid, field = "Biomass")
r_stack <- stack(r_stack, temp)
}
#r_stack <- aggregate(elev2, fact=10, fun=mean, expand=TRUE)
r_stack <- disaggregate(r_stack, fact=4, method = "bilinear")
#calculate mean value across raster
r_stack <- calc(r_stack, fun=function(x) meanIgnoringTwoNA(x))
r_stack <- as.data.frame(r_stack, row.names=NULL, optional=FALSE, xy=TRUE, na.rm=T)
colnames(r_stack)[1] <- "Distance_Coast"
colnames(r_stack)[2] <- "Depth"
colnames(r_stack)[3] <- "Biomass"
ggplot(data = r_stack, mapping = aes(x = Distance_Coast/1000, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) + ylab("Depth (m)") +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
#geom_text_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1) + #, limits = c(1,  3), oob = scales::squish)
#geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
#geom_text(x = 12010, y = -185, label = paste0("Biomass at ", j[1]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black")) +
xlab(element_blank()) +
scale_x_continuous(limits = c(15, 40), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
guides(size = "none", shape = "none") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 16)) +
xlab("Distance from coast (km)")
# a function to calculate mean sometimes:
meanIgnoringTwoNA <- function(x) {
if (sum(is.na(x)) < 2){
mean(x, na.rm=T)
}
else{
mean(x, na.rm=F)
}
}
#create raster stack and average
df.grid <- expand.grid(Distance_Coast = xseq, Depth = yseq)
coordinates(df.grid) <- ~ Distance_Coast + Depth
gridded(df.grid) <- TRUE
r.grid <- raster(df.grid)
r_stack <- stack()
for(i in unique(plot_output$plot)){
temp <- subset(plot_output, plot == i)
coordinates(temp) <- ~ Distance_Coast + Depth
temp <- rasterize(x = temp, y = r.grid, field = "Biomass")
r_stack <- stack(r_stack, temp)
}
#r_stack <- aggregate(elev2, fact=10, fun=mean, expand=TRUE)
r_stack <- disaggregate(r_stack, fact=4, method = "bilinear") # Matt suggested dissagregation but not sure why i want to increase resolution
#calculate mean value across raster
r_stack <- calc(r_stack, fun=function(x) meanIgnoringTwoNA(x))
r_stack <- as.data.frame(r_stack, row.names=NULL, optional=FALSE, xy=TRUE, na.rm=T)
colnames(r_stack)[1] <- "Distance_Coast"
colnames(r_stack)[2] <- "Depth"
colnames(r_stack)[3] <- "Biomass"
ggplot(data = r_stack, mapping = aes(x = Distance_Coast/1000, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) + ylab("Depth (m)") +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
#geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
#geom_text_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1) + #, limits = c(1,  3), oob = scales::squish)
#geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
#geom_text(x = 12010, y = -185, label = paste0("Biomass at ", j[1]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black")) +
xlab(element_blank()) +
scale_x_continuous(limits = c(15, 40), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
guides(size = "none", shape = "none") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 16)) +
xlab("Distance from coast (km)")
ggsave("plots/zoop/Biomass combined interpolation overlap area 3.png", width = 21, height = 14.8, units = "cm", dpi = 600)
library(tidyverse)
mydata <- read_csv("1994 stuff/1994_data_plotting.csv")
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass))) + geom_point() +
facet_wrap(~Date)
p94
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date)
p94
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date) + theme_classic()
p94
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date, cols=1) + theme_classic()
p94
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date, ncol=1) + theme_classic()
p94
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date, ncol=1) + theme_classic() +
geom_ribbon(aes(x = Distance_coast, ymax = -Bathy, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
p94
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date, ncol=1) + theme_classic() +
geom_ribbon(aes(x = Distance_coast, ymax = -Bathy, ymin=-200), inherit.aes = FALSE, fill = "grey60")
p94
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date, ncol=1) + theme_classic() +
geom_ribbon(mydata, aes(x = Distance_coast, ymax = -Bathy, ymin=-200), inherit.aes = FALSE, fill = "grey60")
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date, ncol=1) + theme_classic() +
geom_ribbon(data = mydata, aes(x = Distance_coast, ymax = -Bathy, ymin=-200), inherit.aes = FALSE, fill = "grey60")
p94
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date, ncol=1) + theme_classic() +
geom_ribbon(data = mydata, aes(x = Distance_coast, ymax = -Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60")
p94
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date, ncol=1) + theme_classic() +
geom_ribbon(data = mydata, aes(x = Distance_coast, ymax = -Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
ylim(c(-200,0))
p94
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date, ncol=1) + theme_classic() +
geom_ribbon(data = mydata, aes(x = Distance_coast, ymax = -Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
coord_cartesian(ylim = c(-200,0))
p94
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date, ncol=1) + theme_classic() +
geom_ribbon(data = mydata, aes(x = Distance_coast, ymax = -Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
coord_cartesian(ylim = c(-200,0)) +
scale_y_continuous(expand = c(0, 0))
p94
ggsave("plots/zoop/1994 plots.png", width = 21, height = 29.7, units = "cm", dpi = 600)
p94 <- ggplot(mydata, aes(x = Distance_coast, y = -Depth, size = log10(Biomass_mg_m3))) + geom_point() +
facet_wrap(~Date, ncol=1) + theme_classic() +
geom_ribbon(data = mydata, aes(x = Distance_coast, ymax = -Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
coord_cartesian(ylim = c(-200,0)) +
scale_y_continuous(expand = c(0, 0))+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 16))
p94
ggsave("plots/zoop/1994 plots.png", width = 21, height = 29.7, units = "cm", dpi = 600)
