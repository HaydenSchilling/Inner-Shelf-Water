fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = ParetoSlope, nx = 100, ny = 100))
fit2 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = Temp, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "ParetoSlope")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
df2 <- melt(fit2$z, na.rm = TRUE)
names(df2) <- c("x", "y", "Temp")
df2$Depth <- fit2$y[df2$y]
df2$Distance_Coast <- fit2$x[df2$x]
pl[[j]] <- ggplot(data = df, mapping = aes(x = Distance_Coast/1000, y = Depth, z = ParetoSlope)) +
geom_tile(aes(fill = ParetoSlope)) + ylab("Depth (m)") +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
geom_text_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-1.4, -0.8), oob = scales::squish,
name=expression(bold("Pareto Shape Parameter c"))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth),alpha = 0.5, size = 0.2) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth), alpha = 0.5, size = 0.1, show.legend = FALSE) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
geom_text(x = 11.000, y = -110, label = paste0(letters[j],"Pareto shape\nparameter c\nat ", site_labels[j]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black"),
axis.title = element_text(face = "bold")) +
xlab(element_blank()) +
coord_cartesian(xlim = c(13, 48), expand = TRUE, ylim = c(-140,-10)) +
#scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = c(-125,-100,-75,-50,-25)) +
guides(size = "none", shape = "none") +
theme(legend.title = element_text(angle = 270, hjust= 0.5, size = 12),
axis.title = element_text(face = "bold")) + guides(fill = guide_colorbar(title.position = "right"))
}
pl[[4]] <- pl[[4]] + xlab("Distance from Coastline (km)")
pl[[1]] + pl[[2]] + pl[[3]] + pl[[4]] + plot_layout(ncol = 1, guides = 'collect') & theme(legend.key.height = unit(3.9, "cm"))
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.png'), dpi = 600, height = 21, width = 18, units = "cm")
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.pdf'), dpi = 600, height = 21, width = 18, units = "cm")
pl <- list()
for (j in 1:length(sites)){
mydata2 <- filter(mydata, site == sites[j])
mydata2 <-  mydata2 %>%
drop_na(ParetoSlope) %>%
filter(ParetoSlope != Inf)
Bathy2 <- filter(Bathy, site == sites[j])
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = ParetoSlope, nx = 100, ny = 100))
fit2 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = Temp, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "ParetoSlope")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
df2 <- melt(fit2$z, na.rm = TRUE)
names(df2) <- c("x", "y", "Temp")
df2$Depth <- fit2$y[df2$y]
df2$Distance_Coast <- fit2$x[df2$x]
pl[[j]] <- ggplot(data = df, mapping = aes(x = Distance_Coast/1000, y = Depth, z = ParetoSlope)) +
geom_tile(aes(fill = ParetoSlope)) + ylab("Depth (m)") +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
geom_text_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-1.4, -0.8), oob = scales::squish,
name=expression(bold("Pareto Shape Parameter c"))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth),alpha = 0.5, size = 0.2) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth), alpha = 0.5, size = 0.1, show.legend = FALSE) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
geom_text(x = 12.000, y = -110, label = paste0(letters[j],"Pareto shape\nparameter c\nat ", site_labels[j]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black"),
axis.title = element_text(face = "bold")) +
xlab(element_blank()) +
coord_cartesian(xlim = c(13, 48), expand = TRUE, ylim = c(-140,-10)) +
#scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = c(-125,-100,-75,-50,-25)) +
guides(size = "none", shape = "none") +
theme(legend.title = element_text(angle = 270, hjust= 0.5, size = 12),
axis.title = element_text(face = "bold")) + guides(fill = guide_colorbar(title.position = "right"))
}
pl[[4]] <- pl[[4]] + xlab("Distance from Coastline (km)")
pl[[1]] + pl[[2]] + pl[[3]] + pl[[4]] + plot_layout(ncol = 1, guides = 'collect') & theme(legend.key.height = unit(3.9, "cm"))
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.png'), dpi = 600, height = 21, width = 18, units = "cm")
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.pdf'), dpi = 600, height = 21, width = 18, units = "cm")
pl <- list()
for (j in 1:length(sites)){
mydata2 <- filter(mydata, site == sites[j])
mydata2 <-  mydata2 %>%
drop_na(ParetoSlope) %>%
filter(ParetoSlope != Inf)
Bathy2 <- filter(Bathy, site == sites[j])
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = ParetoSlope, nx = 100, ny = 100))
fit2 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = Temp, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "ParetoSlope")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
df2 <- melt(fit2$z, na.rm = TRUE)
names(df2) <- c("x", "y", "Temp")
df2$Depth <- fit2$y[df2$y]
df2$Distance_Coast <- fit2$x[df2$x]
pl[[j]] <- ggplot(data = df, mapping = aes(x = Distance_Coast/1000, y = Depth, z = ParetoSlope)) +
geom_tile(aes(fill = ParetoSlope)) + ylab("Depth (m)") +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
geom_text_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-1.4, -0.8), oob = scales::squish,
name=expression(bold("Pareto Shape Parameter c"))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth),alpha = 0.5, size = 0.2) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth), alpha = 0.5, size = 0.1, show.legend = FALSE) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
geom_text(x = 12.000, y = -115, label = paste0(letters[j],"Pareto shape\nparameter c\nat ", site_labels[j]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black"),
axis.title = element_text(face = "bold")) +
xlab(element_blank()) +
coord_cartesian(xlim = c(13, 48), expand = TRUE, ylim = c(-140,-10)) +
#scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = c(-125,-100,-75,-50,-25)) +
guides(size = "none", shape = "none") +
theme(legend.title = element_text(angle = 270, hjust= 0.5, size = 12),
axis.title = element_text(face = "bold")) + guides(fill = guide_colorbar(title.position = "right"))
}
pl[[4]] <- pl[[4]] + xlab("Distance from Coastline (km)")
pl[[1]] + pl[[2]] + pl[[3]] + pl[[4]] + plot_layout(ncol = 1, guides = 'collect') & theme(legend.key.height = unit(3.9, "cm"))
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.png'), dpi = 600, height = 21, width = 18, units = "cm")
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.pdf'), dpi = 600, height = 21, width = 18, units = "cm")
pl <- list()
for (j in 1:length(sites)){
mydata2 <- filter(mydata, site == sites[j])
mydata2 <-  mydata2 %>%
drop_na(ParetoSlope) %>%
filter(ParetoSlope != Inf)
Bathy2 <- filter(Bathy, site == sites[j])
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = ParetoSlope, nx = 100, ny = 100))
fit2 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = Temp, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "ParetoSlope")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
df2 <- melt(fit2$z, na.rm = TRUE)
names(df2) <- c("x", "y", "Temp")
df2$Depth <- fit2$y[df2$y]
df2$Distance_Coast <- fit2$x[df2$x]
pl[[j]] <- ggplot(data = df, mapping = aes(x = Distance_Coast/1000, y = Depth, z = ParetoSlope)) +
geom_tile(aes(fill = ParetoSlope)) + ylab("Depth (m)") +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
geom_text_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-1.4, -0.8), oob = scales::squish,
name=expression(bold("Pareto Shape Parameter c"))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth),alpha = 0.5, size = 0.2) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth), alpha = 0.5, size = 0.1, show.legend = FALSE) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
geom_text(x = 12.000, y = -110, label = paste0(letters[j],"Pareto\nshape parameter c\nat ", site_labels[j]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black"),
axis.title = element_text(face = "bold")) +
xlab(element_blank()) +
coord_cartesian(xlim = c(13, 48), expand = TRUE, ylim = c(-140,-10)) +
#scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = c(-125,-100,-75,-50,-25)) +
guides(size = "none", shape = "none") +
theme(legend.title = element_text(angle = 270, hjust= 0.5, size = 12),
axis.title = element_text(face = "bold")) + guides(fill = guide_colorbar(title.position = "right"))
}
pl[[4]] <- pl[[4]] + xlab("Distance from Coastline (km)")
pl[[1]] + pl[[2]] + pl[[3]] + pl[[4]] + plot_layout(ncol = 1, guides = 'collect') & theme(legend.key.height = unit(3.9, "cm"))
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.png'), dpi = 600, height = 21, width = 18, units = "cm")
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.pdf'), dpi = 600, height = 21, width = 18, units = "cm")
pl <- list()
for (j in 1:length(sites)){
mydata2 <- filter(mydata, site == sites[j])
mydata2 <-  mydata2 %>%
drop_na(ParetoSlope) %>%
filter(ParetoSlope != Inf)
Bathy2 <- filter(Bathy, site == sites[j])
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = ParetoSlope, nx = 100, ny = 100))
fit2 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = Temp, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "ParetoSlope")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
df2 <- melt(fit2$z, na.rm = TRUE)
names(df2) <- c("x", "y", "Temp")
df2$Depth <- fit2$y[df2$y]
df2$Distance_Coast <- fit2$x[df2$x]
pl[[j]] <- ggplot(data = df, mapping = aes(x = Distance_Coast/1000, y = Depth, z = ParetoSlope)) +
geom_tile(aes(fill = ParetoSlope)) + ylab("Depth (m)") +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
geom_text_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-1.4, -0.8), oob = scales::squish,
name=expression(bold("Pareto Shape Parameter ")~bolditalic("c"))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth),alpha = 0.5, size = 0.2) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth), alpha = 0.5, size = 0.1, show.legend = FALSE) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
geom_text(x = 12.000, y = -110, label = paste0(letters[j],"Pareto\nshape parameter c\nat ", site_labels[j]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black"),
axis.title = element_text(face = "bold")) +
xlab(element_blank()) +
coord_cartesian(xlim = c(13, 48), expand = TRUE, ylim = c(-140,-10)) +
#scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = c(-125,-100,-75,-50,-25)) +
guides(size = "none", shape = "none") +
theme(legend.title = element_text(angle = 270, hjust= 0.5, size = 12),
axis.title = element_text(face = "bold")) + guides(fill = guide_colorbar(title.position = "right"))
}
pl[[4]] <- pl[[4]] + xlab("Distance from Coastline (km)")
pl[[1]] + pl[[2]] + pl[[3]] + pl[[4]] + plot_layout(ncol = 1, guides = 'collect') & theme(legend.key.height = unit(3.9, "cm"))
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.png'), dpi = 600, height = 21, width = 18, units = "cm")
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.pdf'), dpi = 600, height = 21, width = 18, units = "cm")
### Pareto Slope #  done
pl <- list()
for (j in 1:length(sites)){
mydata2 <- filter(mydata, site == sites[j])
mydata2 <-  mydata2 %>%
drop_na(ParetoSlope) %>%
filter(ParetoSlope != Inf)
Bathy2 <- filter(Bathy, site == sites[j])
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = ParetoSlope, nx = 100, ny = 100))
fit2 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = Temp, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "ParetoSlope")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
df2 <- melt(fit2$z, na.rm = TRUE)
names(df2) <- c("x", "y", "Temp")
df2$Depth <- fit2$y[df2$y]
df2$Distance_Coast <- fit2$x[df2$x]
pl[[j]] <- ggplot(data = df, mapping = aes(x = Distance_Coast/1000, y = Depth, z = ParetoSlope)) +
geom_tile(aes(fill = ParetoSlope)) + ylab("Depth (m)") +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
geom_text_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-1.4, -0.8), oob = scales::squish,
name=expression(bold("Pareto Shape Parameter")~bolditalic("c"))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth),alpha = 0.5, size = 0.2) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth), alpha = 0.5, size = 0.1, show.legend = FALSE) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
geom_text(x = 12.000, y = -110, label = paste0(letters[j],"Pareto\nshape parameter c\nat ", site_labels[j]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black"),
axis.title = element_text(face = "bold")) +
xlab(element_blank()) +
coord_cartesian(xlim = c(13, 48), expand = TRUE, ylim = c(-140,-10)) +
#scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = c(-125,-100,-75,-50,-25)) +
guides(size = "none", shape = "none") +
theme(legend.title = element_text(angle = 270, hjust= 0.5, size = 12),
axis.title = element_text(face = "bold")) + guides(fill = guide_colorbar(title.position = "right"))
}
pl[[4]] <- pl[[4]] + xlab("Distance from Coastline (km)")
pl[[1]] + pl[[2]] + pl[[3]] + pl[[4]] + plot_layout(ncol = 1, guides = 'collect') & theme(legend.key.height = unit(3.9, "cm"))
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.png'), dpi = 600, height = 21, width = 18, units = "cm")
ggsave(paste0('Other prepublication stuff/plots/zoop/ParetoSlope_All','.pdf'), dpi = 600, height = 21, width = 18, units = "cm")
### NBSS plots
pl <- list()
for (j in 1:length(sites)){
mydata2 <- filter(mydata, site == sites[j])
mydata2 <-  mydata2 %>%
drop_na(NBSSSlope) %>%
filter(NBSSSlope != Inf)
Bathy2 <- filter(Bathy, site == sites[j])
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = NBSSSlope, nx = 100, ny = 100))
fit2 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = Temp, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "NBSSSlope")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
df2 <- melt(fit2$z, na.rm = TRUE)
names(df2) <- c("x", "y", "Temp")
df2$Depth <- fit2$y[df2$y]
df2$Distance_Coast <- fit2$x[df2$x]
pl[[j]] <- ggplot(data = df, mapping = aes(x = Distance_Coast/1000, y = Depth, z = NBSSSlope)) +
geom_tile(aes(fill = NBSSSlope)) + ylab("Depth (m)") +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
geom_text_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-1.4, -0.8), oob = scales::squish,
name=expression(bold("NBSS Slope"))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth),alpha = 0.5, size = 0.2) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth), alpha = 0.5, size = 0.1, show.legend = FALSE) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
geom_text(x = 12.010, y = -110, label = paste0(letters[j],"NBSS Slope at\n", site_labels[j]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black"),
axis.title = element_text(face = "bold")) +
xlab(element_blank()) +
coord_cartesian(xlim = c(13, 48), expand = TRUE, ylim = c(-140,-10)) +
#scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = c(-125,-100,-75,-50,-25)) +
guides(size = "none", shape = "none")+
theme(legend.title = element_text(angle = 270, hjust= 0.5, size = 12),
axis.title = element_text(face = "bold")) + guides(fill = guide_colorbar(title.position = "right"))
}
pl[[4]] <- pl[[4]] + xlab("Distance from Coastline (km)")
pl[[1]] + pl[[2]] + pl[[3]] + pl[[4]] + plot_layout(ncol = 1, guides = 'collect')& theme(legend.key.height = unit(3.9, "cm"))
ggsave(paste0('../plots/zoop/NBSS_Slope_All','.png'), dpi = 600, height = 21, width = 18, units = "cm")
ggsave(paste0('../plots/zoop/NBSS_Slope_All','.pdf'), dpi = 600, height = 21, width = 18, units = "cm")
### NBSS plots
pl <- list()
for (j in 1:length(sites)){
mydata2 <- filter(mydata, site == sites[j])
mydata2 <-  mydata2 %>%
drop_na(NBSSSlope) %>%
filter(NBSSSlope != Inf)
Bathy2 <- filter(Bathy, site == sites[j])
fit1 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = NBSSSlope, nx = 100, ny = 100))
fit2 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = Temp, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "NBSSSlope")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
df2 <- melt(fit2$z, na.rm = TRUE)
names(df2) <- c("x", "y", "Temp")
df2$Depth <- fit2$y[df2$y]
df2$Distance_Coast <- fit2$x[df2$x]
pl[[j]] <- ggplot(data = df, mapping = aes(x = Distance_Coast/1000, y = Depth, z = NBSSSlope)) +
geom_tile(aes(fill = NBSSSlope)) + ylab("Depth (m)") +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
geom_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
geom_text_contour(data = df2, aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(-1.4, -0.8), oob = scales::squish,
name=expression(bold("NBSS Slope"))) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth),alpha = 0.5, size = 0.2) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth), alpha = 0.5, size = 0.1, show.legend = FALSE) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
geom_text(x = 12.010, y = -110, label = paste0(letters[j],"NBSS Slope at\n", site_labels[j]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black"),
axis.title = element_text(face = "bold")) +
xlab(element_blank()) +
coord_cartesian(xlim = c(13, 48), expand = TRUE, ylim = c(-140,-10)) +
#scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = c(-125,-100,-75,-50,-25)) +
guides(size = "none", shape = "none")+
theme(legend.title = element_text(angle = 270, hjust= 0.5, size = 12),
axis.title = element_text(face = "bold")) + guides(fill = guide_colorbar(title.position = "right"))
}
pl[[4]] <- pl[[4]] + xlab("Distance from Coastline (km)")
pl[[1]] + pl[[2]] + pl[[3]] + pl[[4]] + plot_layout(ncol = 1, guides = 'collect')& theme(legend.key.height = unit(3.9, "cm"))
ggsave(paste0('Other prepublication stuff/plots/zoop/NBSS_Slope_All','.png'), dpi = 600, height = 21, width = 18, units = "cm")
ggsave(paste0('Other prepublication stuff/plots/zoop/NBSS_Slope_All','.pdf'), dpi = 600, height = 21, width = 18, units = "cm")
# Multi-study plots
library(tidyverse)
library(ggrepel)
mydata <- read_csv("Data/Mulistudy plot data.csv")
head(mydata)
mydata$extra <- 1
# The palette:
cbPalette <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
cbPalette2 <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999')
set.seed(1)
p1 <- ggplot(mydata, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
facet_wrap(~Parameter, scales = "free_y", ncol = 1) + theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("Inshore:Offshore Ratio") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60")+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10),
strip.text = element_text(face = "bold", size = 11),
legend.title = element_text(face = "bold", size = 11),
panel.background = element_rect(fill = NA, color = "black"))
p1
# World map
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "small", returnclass = "sf")
class(world)
# 1 row per study
mydata2 <- mydata %>% distinct(`Reference Number`, .keep_all = TRUE)
P_map <- ggplot() +
geom_sf(data = world, col="grey70", fill = "grey70") +
geom_point(data = mydata2, aes(x = Longitude, y = Latitude), size = 2,
shape = 21, fill = "blue") +
geom_text_repel(data = mydata2, aes(x = Longitude, y = Latitude, label = `Reference Number`),col="black", size =3.5, fontface = "bold") +
theme_bw() +
scale_x_continuous(expand=c(0,0)) + scale_y_continuous(expand=c(0,0)) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
P_map
#ggsave("world map test.png", dpi = 600, units = "cm", height = 12.8, width = 21)
# Abundance only plot
mydata_a <- mydata %>% filter(Parameter == "Abundance")
pA <- ggplot(mydata_a, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("Inshore:Offshore Ratio") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("") + geom_text_repel(col="blue")+
scale_y_log10(breaks = c(1,3,10,20, 25))+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10)) +
ggtitle('a) Abundance')
pA
# Biomass only plot
mydata_b <- mydata %>% filter(Parameter == "Biomass")
pB <- ggplot(mydata_b, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10))+
ggtitle('b) Biomass')
pB
# NBSS Slope only plot
mydata_s <- mydata %>% filter(Parameter == "NBSS Slope")
pC <- ggplot(mydata_s, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("Inshore:Offshore Ratio") +
geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
scale_y_continuous(breaks=c(1,1.2,1.4,1.6,1.8), limits = c(0.9,1.8), expand = c(0,0))+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text.x = element_text(colour = "black", size = 10),
axis.text.y = element_text(color = "black", size=10))+
ggtitle('c) NBSS Slope')
pC
library(patchwork)
p_final <- P_map + pA + pB + pC + plot_layout(ncol = 1, guides = 'collect')
p_final
p_final2 <-  pA + pB + pC + P_map + plot_layout(ncol = 2, widths = c(1, 1))
p_final2
mydata2
mydata3 <- mydata2 %>% select(`Reference Number`, Region)
mydata3
mydata3 <- mydata3 %>% rename("#" = `Reference Number`)
mydata3
tab_test <- P_map + gridExtra::tableGrob(mydata3)
tab_test
tt2 <- gridExtra::ttheme_minimal()
tab_test <- P_map + gridExtra::tableGrob(mydata3, theme = tt2)
tab_test
tab_test <-
gridExtra::tableGrob(mydata3, theme = tt2) + gtable_add_grob(
g,
grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2,
b = nrow(g),
l = 1,
r = ncol(g)
)
## Attempt to plot a table in ggplot
library(gridExtra)
tab_test <-
gridExtra::tableGrob(mydata3, theme = tt2) + gtable_add_grob(
g,
grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2,
b = nrow(g),
l = 1,
r = ncol(g)
)
library(gtable)
tab_test <-
gridExtra::tableGrob(mydata3, theme = tt2) + gtable_add_grob(
g,
grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2,
b = nrow(g),
l = 1,
r = ncol(g)
)
tab_test <-
gridExtra::tableGrob(mydata3, theme = tt2)
tab_test
tab_test <- gtable_add_grob(
tab_test,
grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2,
b = nrow(tab_test),
l = 1,
r = ncol(tab_test)
)
library(grid)
tab_test <- gtable_add_grob(
tab_test,
grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),
t = 2,
b = nrow(tab_test),
l = 1,
r = ncol(tab_test)
)
tab_test
grid.draw(tab_test)
mydata3 <- mydata2 %>% select(`Reference Number`, Region)
mydata3 <- mydata3 %>% rename("#" = `Reference Number`)
mydata3
tt2 <- gridExtra::ttheme_minimal()
tab_test <-
gridExtra::tableGrob(mydata3, theme = tt2)
tab_test
## Attempt to plot a table in ggplot
library(gridExtra)
mydata3 <- mydata2 %>% select(`Reference Number`, Region)
mydata3 <- mydata3 %>% rename("#" = `Reference Number`)
mydata3
tt2 <- gridExtra::ttheme_minimal()
tab_test <-
gridExtra::tableGrob(mydata3, theme = tt2)
tab_test
gridExtra::tableGrob(mydata3, theme = tt2)
mydata3
tt2 <- gridExtra::ttheme_minimal()
gridExtra::tableGrob(mydata3, theme = tt2)
