dat_sum_all_DH$Transect <- factor(dat_sum_all_DH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_DH <- datX2_DH %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year) %>% drop_na() %>%
summarise(n = n())
dat_sum_DH
dat_sum_DH$Transect <- factor(dat_sum_DH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_DH$Percent_1 <-  dat_sum_DH$n/dat_sum_all_DH$n *100
dat_sum_all_DH <- dat_sum_all_DH %>% drop_na()
dat_sum_all_DH
### Merge all sites together into dataframe
seasonal_full <- bind_rows(dat_sum_all_cb, dat_sum_all_EH, dat_sum_all_NS, dat_sum_all_DH)
head(seasonal_full)
p_season <- ggplot(seasonal_full, aes(x = Month, y = Percent_1, lty = Transect)) +
geom_line(size = 2) + theme_classic() + ylab("Temperature Gradient > 1 °C (% Days)") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 20),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 20),
axis.text.y  = element_text(colour="black", size = 16)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
dat_plot <- seasonal_full %>% group_by(Transect, Month) %>% summarise(mean_percent = mean(Percent_1))
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +
geom_line(size = 2) + theme_classic() + ylab("Temperature Gradient > 1 °C (% Days)") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 20),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 20),
axis.text.y  = element_text(colour="black", size = 16)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
dat_plot <- seasonal_full %>% group_by(Transect, Month) %>% summarise(mean_percent = mean(Percent_1),
sd = sd(Percent_1), n = n(),
SE = sd/sqrt(n))
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +
geom_line(size = 2) + theme_classic() + ylab("Temperature Gradient > 1 °C (% Days)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.1)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 20),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 20),
axis.text.y  = element_text(colour="black", size = 16)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +
geom_line(size = 2) + theme_classic() + ylab("Temperature Gradient > 1 °C (% Days)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 20),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 20),
axis.text.y  = element_text(colour="black", size = 16)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 5km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% Days)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 20),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 20),
axis.text.y  = element_text(colour="black", size = 16)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% Days)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 20),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 20),
axis.text.y  = element_text(colour="black", size = 16)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% Days)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 20),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 20),
axis.text.y  = element_text(colour="black", size = 16),
legend.key.width = unit(3, "line")) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% Days)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 20),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 20),
axis.text.y  = element_text(colour="black", size = 16),
legend.key.width = unit(3, "line"),
legend.position=c(.2, .8),
legend.title = element_text(size=8, face="bold")) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 5km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% Days)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.25, .8),
legend.title = element_text(size=14, face="bold")) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 5km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% Days)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.25, .8),
legend.title = element_text(size=14, face="bold")) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 5km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.25, .8),
legend.title = element_text(size=14, face="bold")) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.25, .8),
legend.title = element_text(size=14, face="bold")) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron", "Evans Head", "North Solitary", "Diamond Head"))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 5km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.25, .8),
legend.title = element_text(size=14, face="bold"),
legend.text = element_text(size=10)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron", "Evans Head", "North Solitary", "Diamond Head"))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 5km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.25, .8),
legend.title = element_text(size=14, face="bold"),
legend.text = element_text(size=10)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron (28.6 °S)", "Evans Head (29 °S)", "North Solitary (30 °S)", "Diamond Head (31.8 °S"))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 5km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.25, .8),
legend.title = element_text(size=14, face="bold"),
legend.text = element_text(size=10)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron (28.6 °S)", "Evans Head (29 °S)", "North Solitary (30 °S)", "Diamond Head (31.8 °S)"))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 5km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
datX <- read_csv("Data/Temp gradient all sites.csv")
datX <- read_csv("Data/Temp gradient all sites.csv")
datX$Transect <- factor(datX$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
datX <- filter(datX, Offshore_Inshore <= 8)
head(datX)
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
#ggsave("plots/Inshore_Offshore_Temp_Gradiet_5km.png", height = 21.8, width = 14.8*2, dpi = 600, units = "cm")
# Check Seasonal Patterns
# Cape Byron
# count all samples
datX2_cb <- filter(datX, Transect == "CapeByron")
dat_sum_all_cb <- datX2_cb %>% group_by(Transect, Month, Year) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore)) %>%
drop_na()
dat_sum_all_cb
dat_sum_all_cb$Transect <- factor(dat_sum_all_cb$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_cb <- datX2_cb %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year) %>% drop_na() %>%
summarise(n = n()) %>% drop_na()
dat_sum_cb
dat_sum_cb$Transect <- factor(dat_sum_cb$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
#ggsave("plots/Inshore_Offshore_Temp_Gradiet CB Months_5km.png", height = 21.8, width = 14.8*2, dpi = 600, units = "cm")
dat_sum_all_cb$Percent_1 <-  dat_sum_cb$n/dat_sum_all_cb$n *100
dat_sum_all_cb <- dat_sum_all_cb %>% drop_na()
dat_sum_all_cb
# Evans Head
# count all samples
datX2_EH <- filter(datX, Transect == "EvansHead")
dat_sum_all_EH <- datX2_EH %>% group_by(Transect, Month, Year) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all_EH
dat_sum_all_EH$Transect <- factor(dat_sum_all_EH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_EH <- datX2_EH %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year) %>% drop_na() %>%
summarise(n = n())
dat_sum_EH
dat_sum_EH$Transect <- factor(dat_sum_EH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_EH$Percent_1 <-  dat_sum_EH$n/dat_sum_all_EH$n *100
dat_sum_all_EH <- dat_sum_all_EH %>% drop_na()
dat_sum_all_EH
# North Solitary
# count all samples
datX2_NS <- filter(datX, Transect == "NorthSolitary")
dat_sum_all_NS <- datX2_NS %>% group_by(Transect, Month, Year) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all_NS
dat_sum_all_NS$Transect <- factor(dat_sum_all_NS$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_NS <- datX2_NS %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year) %>% drop_na() %>%
summarise(n = n())
dat_sum_NS
dat_sum_NS$Transect <- factor(dat_sum_NS$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_NS$Percent_1 <-  dat_sum_NS$n/dat_sum_all_NS$n *100
dat_sum_all_NS <- dat_sum_all_NS %>% drop_na()
dat_sum_all_NS
# Diamond Head
# count all samples
datX2_DH <- filter(datX, Transect == "DiamondHead")
dat_sum_all_DH <- datX2_DH %>% group_by(Transect, Month, Year) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all_DH
dat_sum_all_DH$Transect <- factor(dat_sum_all_DH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_DH <- datX2_DH %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year) %>% drop_na() %>%
summarise(n = n())
dat_sum_DH
dat_sum_DH$Transect <- factor(dat_sum_DH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_DH$Percent_1 <-  dat_sum_DH$n/dat_sum_all_DH$n *100
dat_sum_all_DH <- dat_sum_all_DH %>% drop_na()
dat_sum_all_DH
### Merge all sites together into dataframe
seasonal_full <- bind_rows(dat_sum_all_cb, dat_sum_all_EH, dat_sum_all_NS, dat_sum_all_DH)
head(seasonal_full)
dat_plot <- seasonal_full %>% group_by(Transect, Month) %>% summarise(mean_percent = mean(Percent_1),
sd = sd(Percent_1), n = n(),
SE = sd/sqrt(n))
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.25, .8),
legend.title = element_text(size=14, face="bold"),
legend.text = element_text(size=10)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron (28.6 °S)", "Evans Head (29 °S)", "North Solitary (30 °S)", "Diamond Head (31.8 °S)"))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 15km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.25, .85),
legend.title = element_text(size=14, face="bold"),
legend.text = element_text(size=10)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron (28.6 °S)", "Evans Head (29 °S)", "North Solitary (30 °S)", "Diamond Head (31.8 °S)"))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 15km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
library(tidyverse)
datX <- read_csv("Data/Temp gradient all sites.csv")
datX$Transect <- factor(datX$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
datX <- filter(datX, Offshore_Inshore <= 8)
head(datX)
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1)))) +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14))
p1
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (°C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 °C:", round(n/dat_sum_all$n *100,1)))) +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14))
p1
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore SST (°C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 °C:", round(n/dat_sum_all$n *100,1)))) +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14))
p1
ggsave("plots/Inshore_Offshore_Temp_Gradiet_15km.png", height = 21.8, width = 14.8*2, dpi = 600, units = "cm")
ggsave("plots/Inshore_Offshore_Temp_Gradiet_15km.pdf", width = 21.8, height = 14.8, units = "cm")
ggsave("plots/Inshore_Offshore_Temp_Gradiet_15km.png", width = 21.8, height = 14.8, dpi = 600, units = "cm")
ggsave("plots/Inshore_Offshore_Temp_Gradiet_15km.pdf", width = 21.8, height = 14.8, units = "cm")
datX <- read_csv("Data/Temp gradient all sites_5km.csv")
datX$Transect <- factor(datX$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
datX <- filter(datX, Offshore_Inshore <= 8)
head(datX)
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
ggsave("plots/Inshore_Offshore_Temp_Gradiet_5km.png", width = 21.8, height = 14.8, dpi = 600, units = "cm")
ggsave("plots/Inshore_Offshore_Temp_Gradiet_5km.pdf", width = 21.8, height = 14.8, units = "cm")
library(tidyverse)
vel_dat <- read_csv("Data/Velocity Timeseries/All sites velocity timeseries.csv")
vel_dat$Date <- vel_dat$`TIME (UTC)`
temp_dat <- read_csv("Data/Temp gradient all sites_5km.csv")
temp_dat <- filter(temp_dat, Offshore_Inshore < 8)
full_dat <- left_join(vel_dat, temp_dat, by =c("Date", "Transect"))
head(full_dat)
full_dat <- full_dat %>% drop_na(Offshore_Inshore)
full_dat$Transect <- factor(full_dat$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
hist(full_dat$`VCUR (m/s)`)
full_dat$V_Current <- full_dat$`VCUR (m/s)`
p1 <- ggplot(full_dat, aes(x = -V_Current, y = Offshore_Inshore)) + geom_point(alpha = 0.4) +
facet_wrap(~Transect) + theme_bw() + geom_smooth(method = "lm") +
xlab("Southward Current (m/s)") + ylab("Offshore - Inshore Temp (deg C)")
p1
ggsave("plots/Southward Current Temp Gradient Relationship_5km.png",
height = 14.8, width = 21, dpi = 600, units = "cm")
cor.test(full_dat$V_Current, full_dat$Offshore_Inshore)
temp_dat <- read_csv("Data/Temp gradient all sites.csv")
temp_dat <- filter(temp_dat, Offshore_Inshore < 8)
full_dat <- left_join(vel_dat, temp_dat, by =c("Date", "Transect"))
head(full_dat)
full_dat <- full_dat %>% drop_na(Offshore_Inshore)
full_dat$Transect <- factor(full_dat$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
hist(full_dat$`VCUR (m/s)`)
full_dat$V_Current <- full_dat$`VCUR (m/s)`
p1 <- ggplot(full_dat, aes(x = -V_Current, y = Offshore_Inshore)) + geom_point(alpha = 0.4) +
facet_wrap(~Transect) + theme_bw() + geom_smooth(method = "lm") +
xlab("Southward Current (m/s)") + ylab("Offshore - Inshore Temp (deg C)")
p1
ggsave("plots/Southward Current Temp Gradient Relationship_15km.png",
height = 14.8, width = 21, dpi = 600, units = "cm")
cor.test(full_dat$V_Current, full_dat$Offshore_Inshore)
fit1 <- lm(Offshore_Inshore ~ V_Current, data = full_dat)
summary(fit1)
head(full_dat)
str(full_dat)
full_dat$U_Current <- full_dat$`UCUR (m/s)`
str(full_dat)
vel_dat <- read_csv("Data/Velocity Timeseries/All sites velocity timeseries.csv")
vel_dat$Date <- vel_dat$`TIME (UTC)`
temp_dat <- read_csv("Data/Temp gradient all sites.csv")
temp_dat <- filter(temp_dat, Offshore_Inshore < 8)
full_dat <- left_join(vel_dat, temp_dat, by =c("Date", "Transect"))
head(full_dat)
full_dat <- full_dat %>% drop_na(Offshore_Inshore)
full_dat$Transect <- factor(full_dat$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
hist(full_dat$`VCUR (m/s)`)
str(full_dat)
#### Rotate for coastline
full_dat$U_shore = 0
full_dat$V_shore = 0
for (i in 1:nrow(full_dat)){
if (full_dat$Transect[i] == "CapeByron") {
rot_deg_angle= -356
full_dat$U_shore[i] = cos(rot_deg_angle*pi/180)*full_dat$`UCUR (m/s)`[i] + sin(rot_deg_angle*pi/180)*full_dat$`VCUR (m/s)`[i]
full_dat$V_shore[i] = sin(rot_deg_angle*pi/180)*full_dat$`UCUR (m/s)`[i] + cos(rot_deg_angle*pi/180)*full_dat$`VCUR (m/s)`[i]
}
if (full_dat$Transect[i] == "DiamondHead") {
rot_deg_angle= -19
full_dat$U_shore[i] = cos(rot_deg_angle*pi/180)*full_dat$`UCUR (m/s)`[i] + sin(rot_deg_angle*pi/180)*full_dat$`VCUR (m/s)`[i]
full_dat$V_shore[i] = sin(rot_deg_angle*pi/180)*full_dat$`UCUR (m/s)`[i] + cos(rot_deg_angle*pi/180)*full_dat$`VCUR (m/s)`[i]
}
if (full_dat$Transect[i] == "EvansHead") {
rot_deg_angle= -13
full_dat$U_shore[i] = cos(rot_deg_angle*pi/180)*full_dat$`UCUR (m/s)`[i] + sin(rot_deg_angle*pi/180)*full_dat$`VCUR (m/s)`[i]
full_dat$V_shore[i] = sin(rot_deg_angle*pi/180)*full_dat$`UCUR (m/s)`[i] + cos(rot_deg_angle*pi/180)*full_dat$`VCUR (m/s)`[i]
}
if (full_dat$Transect[i] == "NorthSolitary") {
rot_deg_angle= -15
full_dat$U_shore[i] = cos(rot_deg_angle*pi/180)*full_dat$`UCUR (m/s)`[i] + sin(rot_deg_angle*pi/180)*full_dat$`VCUR (m/s)`[i]
full_dat$V_shore[i] = sin(rot_deg_angle*pi/180)*full_dat$`UCUR (m/s)`[i] + cos(rot_deg_angle*pi/180)*full_dat$`VCUR (m/s)`[i]
}
}
str(full_dat)
p1 <- ggplot(full_dat, aes(x = -V_Shore, y = Offshore_Inshore)) + geom_point(alpha = 0.4) +
facet_wrap(~Transect) + theme_bw() + geom_smooth(method = "lm") +
xlab("Alongshore Current (m/s)") + ylab("Offshore - Inshore Temp (deg C)")
p1
p1 <- ggplot(full_dat, aes(x = -V_shore, y = Offshore_Inshore)) + geom_point(alpha = 0.4) +
facet_wrap(~Transect) + theme_bw() + geom_smooth(method = "lm") +
xlab("Alongshore Current (m/s)") + ylab("Offshore - Inshore Temp (deg C)")
p1
ggsave("plots/Alongshore Current Temp Gradient Relationship_15km.png",
height = 14.8, width = 21, dpi = 600, units = "cm")
ggsave("plots/Alongshore Current Temp Gradient Relationship_15km.pdf",
height = 14.8, width = 21, dpi = 600, units = "cm")
p1 <- ggplot(full_dat, aes(x = -V_shore, y = Offshore_Inshore)) + geom_point(alpha = 0.4) +
xlab("Alongshore Current (m/s)") + ylab("Offshore - Inshore Temp (deg C)") +
p1 <- ggplot(full_dat, aes(x = -V_shore, y = Offshore_Inshore)) + geom_point(alpha = 0.4) +
facet_wrap(~Transect) + theme_bw() + geom_smooth(method = "lm") +
xlab("Alongshore Current (m/s)") + ylab("Offshore - Inshore Temp (deg C)") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14))
p1
ggsave("plots/Alongshore Current Temp Gradient Relationship_15km.png",
height = 14.8, width = 21, dpi = 600, units = "cm")
ggsave("plots/Alongshore Current Temp Gradient Relationship_15km.pdf",
height = 14.8, width = 21, dpi = 600, units = "cm")
