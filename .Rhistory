dat_sum_all_DH$Percent_1 <-  dat_sum_DH$n/dat_sum_all_DH$n *100
dat_sum_all_DH <- dat_sum_all_DH %>% drop_na()
dat_sum_all_DH
### Merge all sites together into dataframe
seasonal_full <- bind_rows(dat_sum_all_cb, dat_sum_all_EH, dat_sum_all_NS, dat_sum_all_DH)
head(seasonal_full)
p_season <- ggplot(seasonal_full, aes(x = Month, y = Percent_1, lty = Transect)) +
geom_line(size = 2) + theme_classic() + ylab("Temperature Gradient > 1 °C (% Days)") +
theme(axis.title.x = element_text(face="bold", colour="black", size = 20),
axis.text.x  = element_text(colour="black", size = 16),
axis.title.y = element_text(face="bold", colour="black", size = 20),
axis.text.y  = element_text(colour="black", size = 16)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns.png", dpi = 600, height = 14.8, width = 21, units ="cm")
datX <- read_csv("Data/Temp gradient all sites.csv")
datX$Transect <- factor(datX$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
datX <- filter(datX, Offshore_Inshore <= 8)
head(datX)
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
ggsave("plots/Inshore_Offshore_Temp_Gradiet.png", width = 21.8, height = 14.8, dpi = 600, units = "cm")
ggsave("plots/Inshore_Offshore_Temp_Gradiet.pdf", width = 21.8, height = 14.8, units = "cm")
# Check Seasonal Patterns
# Cape Byron ############################################################# This code does not work
# count all samples
datX2_cb <- filter(datX, Transect == "CapeByron")
datX2_cb$Month <- as.factor(as.character(datX2_cb$Month))
datX2_cb$Year <- as.factor(as.character(datX2_cb$Year))
dat_sum_all_cb <- datX2_cb %>% group_by(Transect, Month, Year) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n()) #%>%
#drop_na()
dat_sum_all_cb
dat_sum_all_cb$Transect <- factor(dat_sum_all_cb$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_cb <- datX2_cb %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year, .drop = FALSE) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n())# %>% drop_na()
dat_sum_cb
dat_sum_cb$Transect <- factor(dat_sum_cb$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_cb$Percent_1 <-  dat_sum_cb$n/dat_sum_all_cb$n *100
dat_sum_all_cb <- dat_sum_all_cb %>% drop_na()
dat_sum_all_cb
# Evans Head
# count all samples
datX2_EH <- filter(datX, Transect == "EvansHead")
datX2_EH$Month <- as.factor(as.character(datX2_EH$Month))
datX2_EH$Year <- as.factor(as.character(datX2_EH$Year))
dat_sum_all_EH <- datX2_EH %>% group_by(Transect, Month, Year, .drop =FALSE) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all_EH
dat_sum_all_EH$Transect <- factor(dat_sum_all_EH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_EH <- datX2_EH %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year, .drop = FALSE) %>% drop_na() %>%
summarise(n = n())
dat_sum_EH
dat_sum_EH$Transect <- factor(dat_sum_EH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_EH$Percent_1 <-  dat_sum_EH$n/dat_sum_all_EH$n *100
dat_sum_all_EH <- dat_sum_all_EH %>% drop_na()
dat_sum_all_EH
# North Solitary
# count all samples
datX2_NS <- filter(datX, Transect == "NorthSolitary")
datX2_NS$Month <- as.factor(as.character(datX2_NS$Month))
datX2_NS$Year <- as.factor(as.character(datX2_NS$Year))
dat_sum_all_NS <- datX2_NS %>% group_by(Transect, Month, Year, .drop =FALSE) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all_NS
dat_sum_all_NS$Transect <- factor(dat_sum_all_NS$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_NS <- datX2_NS %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year, .drop =F) %>% drop_na() %>%
summarise(n = n())
dat_sum_NS
dat_sum_NS$Transect <- factor(dat_sum_NS$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_NS$Percent_1 <-  dat_sum_NS$n/dat_sum_all_NS$n *100
dat_sum_all_NS <- dat_sum_all_NS %>% drop_na()
dat_sum_all_NS
# Diamond Head
# count all samples
datX2_DH <- filter(datX, Transect == "DiamondHead")
datX2_DH$Month <- as.factor(as.character(datX2_DH$Month))
datX2_DH$Year <- as.factor(as.character(datX2_DH$Year))
dat_sum_all_DH <- datX2_DH %>% group_by(Transect, Month, Year, .drop = F) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all_DH
dat_sum_all_DH$Transect <- factor(dat_sum_all_DH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_DH <- datX2_DH %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year, .drop =F) %>% drop_na() %>%
summarise(n = n())
dat_sum_DH
dat_sum_DH$Transect <- factor(dat_sum_DH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_DH$Percent_1 <-  dat_sum_DH$n/dat_sum_all_DH$n *100
dat_sum_all_DH <- dat_sum_all_DH %>% drop_na()
dat_sum_all_DH
### Merge all sites together into dataframe
seasonal_full <- bind_rows(dat_sum_all_cb, dat_sum_all_EH, dat_sum_all_NS, dat_sum_all_DH)
head(seasonal_full)
dat_plot <- seasonal_full %>% group_by(Transect, Month) %>% summarise(mean_percent = mean(Percent_1),
sd = sd(Percent_1), n = n(),
SE = sd/sqrt(n))
dat_plot$Month <- as.numeric(as.character(dat_plot$Month))
head(dat_plot)
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.25, .8),
legend.title = element_text(size=14, face="bold"),
legend.text = element_text(size=10)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron (28.6 °S)", "Evans Head (29 °S)", "North Solitary (30 °S)", "Diamond Head (31.8 °S)"))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns.png", dpi = 600, height = 14.8, width = 21, units ="cm")
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.3, .8),
legend.title = element_text(size=14, face="bold"),
legend.text = element_text(size=10)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron (28.6 °S)", "Evans Head (29 °S)", "North Solitary (30 °S)", "Diamond Head (31.8 °S)"))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns.png", dpi = 600, height = 14.8, width = 21, units ="cm")
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.4, .9),
legend.title = element_text(size=14, face="bold"),
legend.text = element_text(size=10)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron (28.6 °S)", "Evans Head (29 °S)", "North Solitary (30 °S)", "Diamond Head (31.8 °S)"))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns.png", dpi = 600, height = 14.8, width = 21, units ="cm")
#CBE_dat <- fIMOS_MatchMODIS(CBE_dat, pr, res_temp, res_spat) #
#write.csv(CBE_dat, "CB_east.csv", row.names = FALSE)
CBE_dat <- read_csv("CB_east.csv")
#CBW_dat <- fIMOS_MatchMODIS(CBW_dat, pr, res_temp, res_spat) #
#write.csv(CBW_dat_15km, "CB_west.csv", row.names = FALSE)
CBW_dat <- read_csv("CB_west_8km.csv")
#EHE_dat <- fIMOS_MatchMODIS(EHE_dat, pr, res_temp, res_spat) #
#write.csv(EHE_dat, "EH_east.csv", row.names = FALSE)
EHE_dat <- read_csv("EH_east.csv")
#EHW_dat <- fIMOS_MatchMODIS(EHW_dat, pr, res_temp, res_spat) #
#write.csv(EHW_dat_15km, "EH_west.csv", row.names = FALSE)
EHW_dat <- read_csv("EH_west_8km.csv")
#NSE_dat <- fIMOS_MatchMODIS(NSE_dat, pr, res_temp, res_spat) #
#write.csv(NSE_dat, "NS_east.csv", row.names = FALSE)
NSE_dat <- read_csv("NS_east.csv")
#NSW_dat <- fIMOS_MatchMODIS(NSW_dat, pr, res_temp, res_spat) #
#write.csv(NSW_dat_15km, "NS_west.csv", row.names = FALSE)
NSW_dat <- read_csv("NS_west_8km.csv")
#DHE_dat <- fIMOS_MatchMODIS(DHE_dat, pr, res_temp, res_spat) #
#write.csv(DHE_dat, "DH_east.csv", row.names = FALSE)
DHE_dat <- read_csv("DH_east.csv")
#DHW_dat <- fIMOS_MatchMODIS(DHW_dat, pr, res_temp, res_spat) #
#write.csv(DHW_dat_15km, "DH_west.csv", row.names = FALSE)
DHW_dat <- read_csv("DH_west_8km.csv")
# #
df_list <- list(CBE_dat, CBW_dat, EHE_dat,EHW_dat, NSW_dat, NSE_dat, DHE_dat, DHW_dat) # fill with more later
dat <- bind_rows(df_list)
dat2 <- str_split_fixed(dat$Location, pattern = "_", n = 2)
dat$Transect <- as.factor(dat2[,1])
dat$East_West <- as.factor(dat2[,2])
# Remove data columns that don't match for east and west data
dat$Location <- NULL
dat$Latitude <- NULL
dat$Longitude <- NULL
head(dat)
datX <- dat %>% spread(key = East_West, value = sst_1d,  fill = NA) %>% mutate(Offshore_Inshore = East - West)
head(datX)
tail(datX)
hist(datX$Offshore_Inshore)
summary(datX$Offshore_Inshore)
levels(dat$East_West)
levels(dat$Transect)
datX$Transect <- factor(datX$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
write.csv(datX, "Data/Temp gradient all sites 8km.csv", row.names = F)
datX <- read_csv("Data/Temp gradient all sites 8km.csv")
datX$Transect <- factor(datX$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
datX <- filter(datX, Offshore_Inshore <= 8)
head(datX)
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore SST (°C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 °C:", round(n/dat_sum_all$n *100,1)))) +
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14))
p1
ggsave("plots/Inshore_Offshore_Temp_Gradiet_8km.png", width = 21.8, height = 14.8, dpi = 600, units = "cm")
ggsave("plots/Inshore_Offshore_Temp_Gradiet_8km.pdf", width = 21.8, height = 14.8, units = "cm")
# Check Seasonal Patterns
# Cape Byron
# count all samples
datX2_cb <- filter(datX, Transect == "CapeByron")
dat_sum_all_cb <- datX2_cb %>% group_by(Transect, Month, Year) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore)) %>%
drop_na()
dat_sum_all_cb
dat_sum_all_cb$Transect <- factor(dat_sum_all_cb$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_cb <- datX2_cb %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year) %>% drop_na() %>%
summarise(n = n()) %>% drop_na()
dat_sum_cb
dat_sum_cb$Transect <- factor(dat_sum_cb$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_cb$Percent_1 <-  dat_sum_cb$n/dat_sum_all_cb$n *100
dat_sum_all_cb <- dat_sum_all_cb %>% drop_na()
dat_sum_all_cb
# Evans Head
# count all samples
datX2_EH <- filter(datX, Transect == "EvansHead")
dat_sum_all_EH <- datX2_EH %>% group_by(Transect, Month, Year) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all_EH
dat_sum_all_EH$Transect <- factor(dat_sum_all_EH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_EH <- datX2_EH %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year) %>% drop_na() %>%
summarise(n = n())
dat_sum_EH
dat_sum_EH$Transect <- factor(dat_sum_EH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_EH$Percent_1 <-  dat_sum_EH$n/dat_sum_all_EH$n *100
dat_sum_all_EH <- dat_sum_all_EH %>% drop_na()
datX2_cb <- filter(datX, Transect == "CapeByron")
datX2_cb$Month <- as.factor(as.character(datX2_cb$Month))
datX2_cb$Year <- as.factor(as.character(datX2_cb$Year))
dat_sum_all_cb <- datX2_cb %>% group_by(Transect, Month, Year) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n()) #%>%
#drop_na()
dat_sum_all_cb
dat_sum_all_cb$Transect <- factor(dat_sum_all_cb$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_cb <- datX2_cb %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year, .drop = FALSE) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n())# %>% drop_na()
dat_sum_cb
dat_sum_cb$Transect <- factor(dat_sum_cb$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
#ggsave("plots/Inshore_Offshore_Temp_Gradiet CB Months_5km.png", height = 21.8, width = 14.8*2, dpi = 600, units = "cm")
### need to combine both dataframes to make them equal....
dat_sum_all_cb$Percent_1 <-  dat_sum_cb$n/dat_sum_all_cb$n *100
dat_sum_all_cb <- dat_sum_all_cb %>% drop_na()
dat_sum_all_cb
# Evans Head
# count all samples
datX2_EH <- filter(datX, Transect == "EvansHead")
datX2_EH$Month <- as.factor(as.character(datX2_EH$Month))
datX2_EH$Year <- as.factor(as.character(datX2_EH$Year))
dat_sum_all_EH <- datX2_EH %>% group_by(Transect, Month, Year, .drop =FALSE) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all_EH
dat_sum_all_EH$Transect <- factor(dat_sum_all_EH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_EH <- datX2_EH %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year, .drop = FALSE) %>% drop_na() %>%
summarise(n = n())
dat_sum_EH
dat_sum_EH$Transect <- factor(dat_sum_EH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_EH$Percent_1 <-  dat_sum_EH$n/dat_sum_all_EH$n *100
dat_sum_all_EH <- dat_sum_all_EH %>% drop_na()
dat_sum_all_EH
# North Solitary
# count all samples
datX2_NS <- filter(datX, Transect == "NorthSolitary")
datX2_NS$Month <- as.factor(as.character(datX2_NS$Month))
datX2_NS$Year <- as.factor(as.character(datX2_NS$Year))
dat_sum_all_NS <- datX2_NS %>% group_by(Transect, Month, Year, .drop =FALSE) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all_NS
dat_sum_all_NS$Transect <- factor(dat_sum_all_NS$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_NS <- datX2_NS %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year, .drop =F) %>% drop_na() %>%
summarise(n = n())
dat_sum_NS
dat_sum_NS$Transect <- factor(dat_sum_NS$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_NS$Percent_1 <-  dat_sum_NS$n/dat_sum_all_NS$n *100
dat_sum_all_NS <- dat_sum_all_NS %>% drop_na()
dat_sum_all_NS
# Diamond Head
# count all samples
datX2_DH <- filter(datX, Transect == "DiamondHead")
datX2_DH$Month <- as.factor(as.character(datX2_DH$Month))
datX2_DH$Year <- as.factor(as.character(datX2_DH$Year))
dat_sum_all_DH <- datX2_DH %>% group_by(Transect, Month, Year, .drop = F) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all_DH
dat_sum_all_DH$Transect <- factor(dat_sum_all_DH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum_DH <- datX2_DH %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month, Year, .drop =F) %>% drop_na() %>%
summarise(n = n())
dat_sum_DH
dat_sum_DH$Transect <- factor(dat_sum_DH$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all_DH$Percent_1 <-  dat_sum_DH$n/dat_sum_all_DH$n *100
dat_sum_all_DH <- dat_sum_all_DH %>% drop_na()
dat_sum_all_DH
### Merge all sites together into dataframe
seasonal_full <- bind_rows(dat_sum_all_cb, dat_sum_all_EH, dat_sum_all_NS, dat_sum_all_DH)
head(seasonal_full)
dat_plot <- seasonal_full %>% group_by(Transect, Month) %>% summarise(mean_percent = mean(Percent_1),
sd = sd(Percent_1), n = n(),
SE = sd/sqrt(n))
dat_plot$Month <- as.numeric(as.character(dat_plot$Month))
head(dat_plot)
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.4, .9),
legend.title = element_text(size=14, face="bold"),
legend.text = element_text(size=10)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron (28.6 °S)", "Evans Head (29 °S)", "North Solitary (30 °S)", "Diamond Head (31.8 °S)"))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 8km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.75, .1),
legend.title = element_text(size=14, face="bold"),
legend.text = element_text(size=10)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron (28.6 °S)", "Evans Head (29 °S)", "North Solitary (30 °S)", "Diamond Head (31.8 °S)"))
p_season
p_season <- ggplot(dat_plot, aes(x = Month, y = mean_percent, lty = Transect)) +  geom_point() +
geom_line(size = 1.5) + theme_classic() + ylab("Temperature Gradient > 1 °C (% ± SE)") +
geom_errorbar(aes(ymin=mean_percent-SE, ymax=mean_percent+SE), width=.2, show.legend = FALSE)+
theme(axis.title.x = element_text(face="bold", colour="black", size = 18),
axis.text.x  = element_text(colour="black", size = 14),
axis.title.y = element_text(face="bold", colour="black", size = 18),
axis.text.y  = element_text(colour="black", size = 14),
legend.key.width = unit(3, "line"),
legend.position=c(.75, .2),
legend.title = element_text(size=14, face="bold"),
legend.text = element_text(size=10)) +
scale_x_continuous(limits=c(0.8, 12.1), breaks = c(1:12)) +
scale_linetype_discrete(name  ="Transect",
breaks=c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
labels=c("Cape Byron (28.6 °S)", "Evans Head (29 °S)", "North Solitary (30 °S)", "Diamond Head (31.8 °S)"))
p_season
ggsave("plots/Inshore Offshore Seasonal patterns 8km.png", dpi = 600, height = 14.8, width = 21, units ="cm")
library(tidyverse)
mydata <- read_csv("Data/NRS Zooplankton PH.csv")
library(tidyverse)
library(lubridate)
str(mydata)
p1 <- ggplot(mydata, aes(x = Month, y = ZoopAbundance_m3)) + geom_point()
p1
p1 <- ggplot(mydata, aes(x = Month, y = log10(ZoopAbundance_m3))) + geom_point()
p1
p1 <- ggplot(mydata, aes(x = Month, y = log10(ZoopAbundance_m3))) + geom_point() +
geom_smooth()
p1
p1 <- ggplot(mydata, aes(x = Month, y = log10(ZoopAbundance_m3))) + geom_point() +
geom_smooth() + scale_x_continuous(breaks = seq(1,12))
p1
p1 <- ggplot(mydata, aes(x = Month, y = log10(ZoopAbundance_m3))) + geom_point() +
geom_smooth() + scale_x_continuous(breaks = seq(1,12)) + theme_classic()
p1
ggsave("plots/Port Hacking Seasonality.png", height = 14.8, width = 21, units = "cm", dpi = 600)
# Hovmoller Plots  for sites
#Load Packages
library(tidyverse)
library(lubridate)
library(ncdf4)
# #inshore locations (15 km from shore):
#  # CB - -28.632 , 153.794
#  # EH - -29 , 153.637
#  # NS - -30 , 153.384
#  # DH - -31.75, 153.944
# sitesX$Latitude_Offshore <- c(-28.63176, -28.99976, -29.99975, -31.64973)
# sitesX$Longitude_Offshore <- c(154.0497, 153.8936, 153.6431, 154.2076)
# Open File
mydata <- nc_open("../../../UNLOC/Charlie/Climatology/IMOS_aggregation_20200117T053823Z.nc")
nc_close(mydata)
library(tidync)
mydata2 <- tidync("../../../UNLOC/Charlie/Climatology/IMOS_aggregation_20200117T053823Z.nc")
mydata2
# Evans Head
EH <- tidync("../../../UNLOC/Charlie/Climatology/IMOS_aggregation_20200117T053823Z.nc") %>%
hyper_filter(LATITUDE = LATITUDE > -29.1 & LATITUDE < -28.9) %>%
hyper_filter(LONGITUDE = LONGITUDE < 154.15)
EH
EH_dat <- EH %>% hyper_tibble()
EH_data <- EH_dat %>% group_by(LONGITUDE, DAY_OF_YEAR) %>% summarise(TEMP = mean(TEMP))
EH_data$Site <- "Evans Head"
head(EH_data)
# Cape Byron
CB <- tidync("../../../UNLOC/Charlie/Climatology/IMOS_aggregation_20200117T053823Z.nc") %>%
hyper_filter(LATITUDE = LATITUDE > -28.7 & LATITUDE < -28.5) %>%
hyper_filter(LONGITUDE = LONGITUDE < 154.15)
CB
CB_dat <- CB %>% hyper_tibble()
CB_data <- CB_dat %>% group_by(LONGITUDE, DAY_OF_YEAR) %>% summarise(TEMP = mean(TEMP))
CB_data$Site <- "Cape Byron"
head(CB_data)
# North Solitary
NS <- tidync("../../../UNLOC/Charlie/Climatology/IMOS_aggregation_20200117T053823Z.nc") %>%
hyper_filter(LATITUDE = LATITUDE > -30.1 & LATITUDE < -29.9) %>%
hyper_filter(LONGITUDE = LONGITUDE < 154.15)
NS
NS_dat <- NS %>% hyper_tibble()
NS_data <- NS_dat %>% group_by(LONGITUDE, DAY_OF_YEAR) %>% summarise(TEMP = mean(TEMP))
NS_data$Site <- "North Solitary"
head(NS_data)
# Diamond Head
DH <- tidync("../../../UNLOC/Charlie/Climatology/IMOS_aggregation_20200117T053823Z.nc") %>%
hyper_filter(LATITUDE = LATITUDE > -31.85 & LATITUDE < -31.65) %>%
hyper_filter(LONGITUDE = LONGITUDE < 154.15)
DH
DH_dat <- DH %>% hyper_tibble()
DH_data <- DH_dat %>% group_by(LONGITUDE, DAY_OF_YEAR) %>% summarise(TEMP = mean(TEMP))
DH_data$Site <- "Diamond Head"
head(DH_data)
# Combine sites
full_dat <- bind_rows(CB_data, EH_data, NS_data, DH_data)
full_dat$Site <- factor(full_dat$Site, levels = c("Cape Byron", "Evans Head", "North Solitary", "Diamond Head"))
# Create dataframe of inshore and offshore sites
sitesX <- data.frame(Site = c("Cape Byron", "Evans Head", "North Solitary", "Diamond Head"),
Longitude_Inshore = c(153.794, 153.637, 153.384, 152.944),
Longitude_Offshore <- c(154.1008, 153.9449, 153.6949, 153.2606),
Longitude_Inshore_8km = c(153.7224, 153.5652, 153.3115, 152.8702))
# #inshore locations (15 km from shore):
#  # CB - -28.632 , 153.794
#  # EH - -29 , 153.637
#  # NS - -30 , 153.384
#  # DH - -31.75, 152.944
# Jet colour pallete
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
library(ggplot2)
p1 <- ggplot(full_dat, aes(x = LONGITUDE, y = DAY_OF_YEAR, fill = TEMP)) + geom_tile() + #coord_flip() +
scale_fill_gradientn(colors = jet.colors(7), limits = c(18,27)) + facet_wrap(~Site,  ncol = 1) +
theme_bw() + scale_x_continuous(expand = c(0, 0)) + geom_vline(data = sitesX, aes(xintercept = Longitude_Inshore)) +
geom_vline(data = sitesX, aes(xintercept = Longitude_Offshore)) + ylab("Day of the Year") + xlab("Longitude")
p1
p1 <- ggplot(full_dat, aes(x = LONGITUDE, y = DAY_OF_YEAR, fill = TEMP)) + geom_tile() + #coord_flip() +
scale_fill_gradientn(colors = jet.colors(7), limits = c(18,27)) + facet_wrap(~Site,  ncol = 1) +
theme_bw() + scale_x_continuous(expand = c(0, 0)) + geom_vline(data = sitesX, aes(xintercept = Longitude_Inshore)) +
geom_vline(data = sitesX, aes(xintercept = Longitude_Offshore)) + geom_vline(data = sitesX, aes(xintercept = Longitude_Inshore_8km)) +
ylab("Day of the Year") + xlab("Longitude")
p1
p1 <- ggplot(full_dat, aes(x = LONGITUDE, y = DAY_OF_YEAR, fill = TEMP)) + geom_tile() + #coord_flip() +
scale_fill_gradientn(colors = jet.colors(7), limits = c(18,27)) + facet_wrap(~Site,  ncol = 1) +
theme_bw() + scale_x_continuous(expand = c(0, 0)) + geom_vline(data = sitesX, aes(xintercept = Longitude_Inshore)) +
geom_vline(data = sitesX, aes(xintercept = Longitude_Offshore)) + geom_vline(data = sitesX, aes(xintercept = Longitude_Inshore_8km, lty =2)) +
ylab("Day of the Year") + xlab("Longitude")
p1
p1 <- ggplot(full_dat, aes(x = LONGITUDE, y = DAY_OF_YEAR, fill = TEMP)) + geom_tile() + #coord_flip() +
scale_fill_gradientn(colors = jet.colors(7), limits = c(18,27)) + facet_wrap(~Site,  ncol = 1) +
theme_bw() + scale_x_continuous(expand = c(0, 0)) + geom_vline(data = sitesX, aes(xintercept = Longitude_Inshore)) +
geom_vline(data = sitesX, aes(xintercept = Longitude_Offshore)) + geom_vline(data = sitesX, aes(xintercept = Longitude_Inshore_8km), lty =2) +
ylab("Day of the Year") + xlab("Longitude")
p1
ggsave("plots/Hovmoller plots inshore offshore.png", width = 21.5, height = 29, units = "cm", dpi = 600)
ggsave("plots/Hovmoller plots inshore offshore.pdf", width = 21.5, height = 29, units = "cm", dpi = 600)
