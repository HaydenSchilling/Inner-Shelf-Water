plot.title = title(main = c(j)))
dev.off()
png(paste0('plots/zoop/',j,"_Normalised_GeoMnSize",'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, zlim = c(min(mydata$Norm.GeoMnESD), max(mydata$Norm.GeoMnESD)),
plot.title = title(main = c(j))))
dev.off()
}
### Mormalised Geo_Mn Size #  done
#mydata <- na.omit(mydata) # check this
for (j in sites){
mydata2 <- subset(mydata, site == j)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$depth, z = mydata2$GeoMnESD)
pdf(paste0('plots/zoop/',j,"_GeoMnSize",'.pdf'), width=10, height=5)
print(filled.contour(fit1, zlim = c(min(mydata$GeoMnESD), max(mydata$GeoMnESD))),
plot.title = title(main = c(j)))
dev.off()
png(paste0('plots/zoop/',j,"_GeoMnSize",'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, zlim = c(min(mydata$GeoMnESD), max(mydata$GeoMnESD)),
plot.title = title(main = c(j))))
dev.off()
}
### Geo_Mn Size #  done
#mydata <- na.omit(mydata) # check this
for (j in sites){
mydata2 <- subset(mydata, site == j)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$depth, z = mydata2$GeoMnESD*1000)
pdf(paste0('plots/zoop/',j,"_GeoMnSize",'.pdf'), width=10, height=5)
print(filled.contour(fit1, zlim = c(min(mydata$GeoMnESD*1000), max(mydata$GeoMnESD*1000))),
plot.title = title(main = c(j)))
dev.off()
png(paste0('plots/zoop/',j,"_GeoMnSize",'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, zlim = c(min(mydata$GeoMnESD*1000), max(mydata$GeoMnESD*1000)),
plot.title = title(main = c(j))))
dev.off()
}
pTS <- ggplot(mydata, aes(x = sal, y = temp, col = biomass)) + geom_point()
pTS
pTS <- ggplot(mydata, aes(x = sal, y = temp, col = biomass)) + geom_point() + facet_wrap(~site)
pTS
### TS Plots
mydata3 <- subset(mydata, depth > 10)
pTS <- ggplot(mydata3, aes(x = sal, y = temp, col = biomass)) + geom_point() + facet_wrap(~site)
pTS
pTS <- ggplot(mydata3, aes(x = sal, y = temp, col = biomass)) + geom_point() + facet_wrap(~site) +
theme_classic()
pTS
pTS <- ggplot(mydata3, aes(x = sal, y = temp, col = biomass)) + geom_point() + facet_wrap(~site) +
theme_classic() + scale_color_gradient2()
pTS
pTS <- ggplot(mydata3, aes(x = sal, y = temp, col = biomass)) + geom_point() + facet_wrap(~site) +
theme_classic() + scale_color_gradient2(low = "blue", high = "red")
pTS
pTS <- ggplot(mydata3, aes(x = sal, y = temp, col = biomass)) + geom_point() + facet_wrap(~site) +
theme_classic() + scale_color_gradient2(low = "blue", high = "red", midpoint = 1200)
pTS
pTS <- ggplot(mydata3, aes(x = sal, y = temp, col = log10(biomass))) + geom_point() + facet_wrap(~site) +
theme_classic() + scale_color_gradient2(low = "blue", high = "red", midpoint = 2.5)
pTS
pTS <- ggplot(mydata3, aes(x = sal, y = temp, col = log10(biomass))) + geom_point() + facet_wrap(~site) +
theme_classic() + scale_color_gradient2(low = "blue", high = "red", midpoint = 2)
pTS
ggsave("plots/zoop/TS plot by log10 biomass.pdf", width=10, height=5)
ggsave("plots/zoop/TS plot by log10 biomass.pdf", width=10, height=8)
ggsave("plots/zoop/TS plot by log10 biomass.png", width=10, height=8, dpi = 600)
mydata <- read.csv("Data/HYD cleaned 080419.csv")
str(mydata)
head(mydata)
## R Write Function
aou <- function(S, T, O2){
T1 = (T + 273.15) ./ 100;
OSAT = -177.7888 + 255.5907 ./ T1 + 146.4813 .* log(T1) - 22.2040 .* T1
OSAT = OSAT + S .* (-0.037362 + T1 .* (0.016504 - 0.0020564 .* T1))
OSAT = exp(OSAT)
OSAT = OSAT * 1000 ./ 22.392
AOU = OSAT - O2
return(AOU)
}
## R Write Function
aou <- function(S, T, O2){
T1 = (T + 273.15) / 100;
OSAT = -177.7888 + 255.5907 / T1 + 146.4813 * log(T1) - 22.2040 * T1
OSAT = OSAT + S * (-0.037362 + T1 * (0.016504 - 0.0020564 * T1))
OSAT = exp(OSAT)
OSAT = OSAT * 1000 / 22.392
AOU = OSAT - O2
return(AOU)
}
plot(mydata$Salinity, mydata$CTD.Sal)
mydata$AOU <- aou(mydata$CTD.Sal, mydata$CTD.Temp, mydata$Oxygen)
sites <- levels(mydata$OPC_site)
for (j in sites){
mydata2 <- subset(mydata, site == j)
for (i in vars){
mydata2 <- mydata2 %>% drop_na(i) # removes NA in the variable we are interested in
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2$AOU)
pdf(paste0('plots/CTD/',j,"_AOU",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/CTD/',j,"_AOU",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
for (i in vars){
mydata2 <- mydata2 %>% drop_na(i) # removes NA in the variable we are interested in
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2$AOU)
pdf(paste0('plots/CTD/',j,"_AOU",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/CTD/',j,"_AOU",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2$AOU)
pdf(paste0('plots/CTD/',j,"_AOU",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/CTD/',j,"_AOU",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
### Get distance from shore
library(geosphere)
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$site[i] == "CapeByron") {
mydata$Distance_Coast[i] = distm(c(153.638598, -28.635808), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "DiamondHead") {
mydata$Distance_Coast[i] = distm(c(152.782016, -31.749982), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "EvansHead") {
mydata$Distance_Coast[i] = distm(c(153.481200, -28.994824), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "NorthSolitary") {
mydata$Distance_Coast[i] = distm(c(153.224309, -29.995614), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
}
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$site[i] == "CB") {
mydata$Distance_Coast[i] = distm(c(153.638598, -28.635808), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "DH") {
mydata$Distance_Coast[i] = distm(c(152.782016, -31.749982), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "EH") {
mydata$Distance_Coast[i] = distm(c(153.481200, -28.994824), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "NS") {
mydata$Distance_Coast[i] = distm(c(153.224309, -29.995614), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
}
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$OPC_site[i] == "CB") {
mydata$Distance_Coast[i] = distm(c(153.638598, -28.635808), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$OPC_site[i] == "DH") {
mydata$Distance_Coast[i] = distm(c(152.782016, -31.749982), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$OPC_site[i] == "EH") {
mydata$Distance_Coast[i] = distm(c(153.481200, -28.994824), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$OPC_site[i] == "NS") {
mydata$Distance_Coast[i] = distm(c(153.224309, -29.995614), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
}
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = mydata2$AOU)
pdf(paste0('plots/CTD/',j,"_AOU",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/CTD/',j,"_AOU",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = mydata2$AOU)
pdf(paste0('plots/CTD/',j,"_AOU",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j))))
dev.off()
pdf(paste0('plots/CTD/',j,"_AOU",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j))))
dev.off()
}
# now only top 200
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = mydata2$AOU)
pdf(paste0('plots/CTD/',j,"_AOU_200",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$AOU), max(mydata$AOU)),
ylim = c(-200,0)))
dev.off()
pdf(paste0('plots/CTD/',j,"_AOU_200",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j))),
ylim = c(-200,0))
dev.off()
}
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = mydata2$AOU)
pdf(paste0('plots/CTD/',j,"_AOU",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$AOU), max(mydata$AOU))))
dev.off()
png(paste0('plots/CTD/',j,"_AOU",'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$AOU), max(mydata$AOU))))
dev.off()
pdf(paste0('plots/CTD/',j,"_AOU",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j))))
dev.off()
}
# now only top 200
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = mydata2$AOU)
pdf(paste0('plots/CTD/',j,"_AOU_200",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$AOU), max(mydata$AOU)),
ylim = c(-200,0)))
dev.off()
png(paste0('plots/CTD/',j,"_AOU_200",'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$AOU), max(mydata$AOU)),
ylim = c(-200,0)))
dev.off()
pdf(paste0('plots/CTD/',j,"_AOU_200",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j))),
ylim = c(-200,0))
dev.off()
}
mydata <- read.csv("Data/MNF_SS200408_ctd_trawler/MNF_SS200408_ctd_trawler.csv")
plot(mydata$START_LAT, mydata$START_LON)
plot(mydata$START_LON, mydata$START_LAT)
plot(mydata$START_LON, mydata$START_LAT, col = mydata$START_TIME)
plot(mydata$START_LON, mydata$START_LAT)
mydata_CTD <- read.csv("Data/HYD cleaned 080419.csv")
summary(mydata_CTD$OPC_site, mydata_CTD$long3)
Table(mydata_CTD$OPC_site, mydata_CTD$long3)
table(mydata_CTD$OPC_site, mydata_CTD$long3)
table(mydata_CTD$OPC_site, mydata_CTD$lat3)
mydata$site[mydata$START_LAT  <= -31.5] <- "DiamondHead"
#mydata$Zone[mydata$Latitude < -34] <- "Southern NSW"
#mydata$Zone[mydata$Latitude > -34 & mydata$Latitude <= -31] <- "Central NSW"
mydata$Zone[mydata$Latitude > -29.1] <- "EvansHead"
#mydata$Zone[mydata$Latitude < -34] <- "Southern NSW"
#mydata$Zone[mydata$Latitude > -34 & mydata$Latitude <= -31] <- "Central NSW"
mydata$Zone[mydata$START_LAT > -29.1] <- "EvansHead"
#mydata$Zone[mydata$Latitude < -34] <- "Southern NSW"
#mydata$Zone[mydata$Latitude > -34 & mydata$Latitude <= -31] <- "Central NSW"
mydata$site[mydata$START_LAT > -29.1] <- "EvansHead"
View(mydata)
mydata$Zone[mydata$START_LAT > -29.01 & mydata$START_LAT < -28.9] <- "NorthSolitary"
View(mydata)
mydata$site[mydata$START_LAT > -29.01 & mydata$START_LAT < -28.9] <- "NorthSolitary"
mydata$site[mydata$START_LAT  <= -31.5] <- "DiamondHead"
#mydata$Zone[mydata$Latitude < -34] <- "Southern NSW"
#mydata$Zone[mydata$Latitude > -34 & mydata$Latitude <= -31] <- "Central NSW"
mydata$site[mydata$START_LAT > -29.1] <- "EvansHead"
mydata$site[mydata$START_LAT > -29.01 & mydata$START_LAT < -28.9] <- "NorthSolitary"
plot(mydata$START_LON, mydata$START_LAT, col = mydata$site)
plot(mydata$START_LON, mydata$START_LAT, col = as.factor(mydata$site))
mydata_CTD <- read.csv("Data/HYD cleaned 080419.csv")
table(mydata_CTD$OPC_site, mydata_CTD$lat3)
hist(mydata$START_LAT)
mydata$site[mydata$START_LAT  <= -31.5] <- "DiamondHead"
#mydata$Zone[mydata$Latitude < -34] <- "Southern NSW"
#mydata$Zone[mydata$Latitude > -34 & mydata$Latitude <= -31] <- "Central NSW"
mydata$site[mydata$START_LAT > -29.1] <- "EvansHead"
mydata$site[mydata$START_LAT > -31 & mydata$START_LAT < -29.7] <- "NorthSolitary"
plot(mydata$START_LON, mydata$START_LAT, col = as.factor(mydata$site))
table(mydata_CTD$OPC_site, mydata_CTD$long3)
mydata <- read.csv("Data/MNF_SS200408_ctd_trawler/MNF_SS200408_ctd_trawler.csv")
plot(mydata$START_LON, mydata$START_LAT, col = as.factor(mydata$site))
mydata_CTD <- read.csv("Data/HYD cleaned 080419.csv")
mydata$site[mydata$START_LAT  <= -31.5] <- "DiamondHead"
#mydata$Zone[mydata$Latitude < -34] <- "Southern NSW"
#mydata$Zone[mydata$Latitude > -34 & mydata$Latitude <= -31] <- "Central NSW"
mydata$site[mydata$START_LAT > -29.1] <- "EvansHead"
mydata$site[mydata$START_LAT > -31 & mydata$START_LAT < -29.7 & mydata$START_LON > 153.4] <- "NorthSolitary"
plot(mydata$START_LON, mydata$START_LAT, col = as.factor(mydata$site))
str(mydata)
### Get distance from shore
library(geosphere)
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$OPC_site[i] == "DiamondHead") {
mydata$Distance_Coast[i] = distm(c(152.782016, -31.749982), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$OPC_site[i] == "EvansHead") {
mydata$Distance_Coast[i] = distm(c(153.481200, -28.994824), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$OPC_site[i] == "NorthSolitary") {
mydata$Distance_Coast[i] = distm(c(153.224309, -29.995614), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
}
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$site[i] == "DiamondHead") {
mydata$Distance_Coast[i] = distm(c(152.782016, -31.749982), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "EvansHead") {
mydata$Distance_Coast[i] = distm(c(153.481200, -28.994824), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "NorthSolitary") {
mydata$Distance_Coast[i] = distm(c(153.224309, -29.995614), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
}
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$site[i] == "DiamondHead") {
mydata$Distance_Coast[i] = distm(c(152.782016, -31.749982), c(mydata$START_LON[i], mydata$START_LAT[i]), fun = distHaversine)
}
if (mydata$site[i] == "EvansHead") {
mydata$Distance_Coast[i] = distm(c(153.481200, -28.994824), c(mydata$START_LON[i], mydata$START_LAT[i]), fun = distHaversine)
}
if (mydata$site[i] == "NorthSolitary") {
mydata$Distance_Coast[i] = distm(c(153.224309, -29.995614), c(mydata$START_LON[i], mydata$START_LAT[i]), fun = distHaversine)
}
}
for (j in sites){
mydata2 <- subset(mydata, site == j)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$PRESSURE, z = mydata2$FLUORESCENCE)
pdf(paste0('plots/CTD/',j,"_Flu",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$FLUORESCENCE), max(mydata$FLUORESCENCE))))
dev.off()
png(paste0('plots/CTD/',j,"_Flu",'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$FLUORESCENCE), max(mydata$FLUORESCENCE))))
dev.off()
pdf(paste0('plots/CTD/',j,"_Flu",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j))))
dev.off()
}
sites <- levels(mydata$site)
for (j in sites){
mydata2 <- subset(mydata, site == j)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$PRESSURE, z = mydata2$FLUORESCENCE)
pdf(paste0('plots/CTD/',j,"_Flu",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$FLUORESCENCE), max(mydata$FLUORESCENCE))))
dev.off()
png(paste0('plots/CTD/',j,"_Flu",'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$FLUORESCENCE), max(mydata$FLUORESCENCE))))
dev.off()
pdf(paste0('plots/CTD/',j,"_Flu",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j))))
dev.off()
}
# now only top 200
for (j in sites){
mydata2 <- subset(mydata, site == j)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$PRESSURE, z = mydata2$FLUORESCENCE)
pdf(paste0('plots/CTD/',j,"_Flu_200",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$FLUORESCENCE), max(mydata$FLUORESCENCE)),
ylim = c(-200,0)))
dev.off()
png(paste0('plots/CTD/',j,"_Flu_200",'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$FLUORESCENCE), max(mydata$FLUORESCENCE)),
ylim = c(-200,0)))
dev.off()
pdf(paste0('plots/CTD/',j,"_Flu_200",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j))),
ylim = c(-200,0))
dev.off()
}
mydata$site <- as.factor(mydata$site)
sites <- levels(mydata$site)
for (j in sites){
mydata2 <- subset(mydata, site == j)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$PRESSURE, z = mydata2$FLUORESCENCE)
pdf(paste0('plots/CTD/',j,"_Flu",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$FLUORESCENCE), max(mydata$FLUORESCENCE))))
dev.off()
png(paste0('plots/CTD/',j,"_Flu",'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$FLUORESCENCE), max(mydata$FLUORESCENCE))))
dev.off()
pdf(paste0('plots/CTD/',j,"_Flu",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j))))
dev.off()
}
View(mydata2)
# now only top 200
for (j in sites){
mydata2 <- subset(mydata, site == j)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$PRESSURE, z = mydata2$FLUORESCENCE)
pdf(paste0('plots/CTD/',j,"_Flu_200",'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$FLUORESCENCE), max(mydata$FLUORESCENCE)),
ylim = c(-200,0)))
dev.off()
png(paste0('plots/CTD/',j,"_Flu_200",'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, plot.title = title(main = c(j)),
zlim = c(min(mydata$FLUORESCENCE), max(mydata$FLUORESCENCE)),
ylim = c(-200,0)))
dev.off()
pdf(paste0('plots/CTD/',j,"_Flu_200",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j))),
ylim = c(-200,0))
dev.off()
}
mydata2 <- subset(mydata, site == "EvansHead")
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$PRESSURE, z = mydata2$FLUORESCENCE)
mydata2 <- subset(mydata, site == "NorthSolitary")
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$PRESSURE, z = mydata2$FLUORESCENCE)
# Zooplankton data interpolation
# Interpolating plots
#install.packages("akima")
library(akima)
# load data
mydata <- read.csv("Data/Original OPC Data cleaned.csv")
str(mydata)
head(mydata)
### Get distance from shore
library(geosphere)
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$site[i] == "CapeByron") {
mydata$Distance_Coast[i] = distm(c(153.638598, -28.635808), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "DiamondHead") {
mydata$Distance_Coast[i] = distm(c(152.782016, -31.749982), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "EvansHead") {
mydata$Distance_Coast[i] = distm(c(153.481200, -28.994824), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "NorthSolitary") {
mydata$Distance_Coast[i] = distm(c(153.224309, -29.995614), c(mydata$long[i], mydata$lat[i]), fun = distHaversine)
}
}
# try a single plot
mydata2 <- subset(mydata, site == "DiamondHead")
sites <- levels(mydata$site)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$depth, z = log10(mydata2$biomass))
filled.contour(fit1, zlim = c(min(log10(mydata$biomass)), log10(mydata$biomass))))
filled.contour(fit1, zlim = c(min(log10(mydata$biomass)), log10(mydata$biomass)))
library(akima)
library(tidyverse)
library(geosphere)
library(reshape2) # I only load this to use 'melt' below. I coulnd't figure out how to do it with tidyverse :-(
# load data
mydata <- read_csv("Data/SS2004_SeaSoarData.csv")
str(mydata)
head(mydata)
mydata <- mydata %>%
mutate(site = case_when(site = str_detect(File,"SS0408_023") ~ "CapeByron",
site = str_detect(File,"SS0408_021") ~ "EvansHead",
site = str_detect(File,"SS0408_010") ~ "NorthSolitary",
site = str_detect(File,"SS0408_008") ~ "DiamondHead"),
site = as.factor(site))
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$site[i] == "CapeByron") {
mydata$Distance_Coast[i] = distm(c(153.638598, -28.635808), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "EvansHead") {
mydata$Distance_Coast[i] = distm(c(153.481200, -28.994824), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "NorthSolitary") {
mydata$Distance_Coast[i] = distm(c(153.224309, -29.995614), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "DiamondHead") {
mydata$Distance_Coast[i] = distm(c(152.782016, -31.749982), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
}
# try a single plot
mydata2 <- mydata %>%
filter(site == "DiamondHead" & is.na(Depth)==FALSE & is.na(Biomass)==FALSE)
fit1 <- interp(x = mydata2$Distance_Coast, y = -mydata2$Depth, z = log10(mydata2$Biomass))
filled.contour(fit1, zlim = c(min(log10(mydata$Biomass)), log10(mydata$Biomass)))
fld <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = log10(Biomass), nx = 100, ny = 100))
df <- melt(fld$z, na.rm = TRUE)
names(df) <- c("x", "y", "Biomass")
df$Distance_Coast <- fld$x[df$x]
df$Depth <- fld$y[df$y]
# Now do it with ggplot
ggplot(data = df, mapping = aes(x = Distance_Coast, y = Depth, z = log10(Biomass))) +
geom_tile(aes(fill = log10(Biomass))) +
geom_contour(colour = "white", binwidth = 0.125) +
scale_fill_distiller(palette = "YlOrRd", direction = 1, limits = c(-0.25,  0.75)) +
geom_line(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth)) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast, y = -Depth))
sites <- levels(mydata$site)
