# #         "owtd", "npp_vgpm_eppley_oc3", "npp_vgpm_eppley_gsm", "nanop_brewin2012in",
# #         "nanop_brewin2010at", "l2_flags", "ipar", "dt", "chl_oc3", "chl_gsm", "K_490")
#
# pr <- c("sst") # select products here eg: "chl_oc3", "sst"
# # Set resolutions
# res_temp <- "1d" # temporal resolutions
# res_spat <- 5 # Return the average of res_spat x res_spat pixels
#
# #dat <- fIMOS_MatchMODIS(full_dat, pr, res_temp, res_spat)
# #str(dat)
#
#
#
# #write.csv(dat, "Inshore_Offshore_Gradient.csv", row.names = F)
#
#
#
# #CBE_dat <- fIMOS_MatchMODIS(CBE_dat, pr, res_temp, res_spat) #
# #write.csv(CBE_dat, "CB_east.csv", row.names = FALSE)
# CBE_dat <- read_csv("CB_east.csv")
#
# #CBW_dat <- fIMOS_MatchMODIS(CBW_dat, pr, res_temp, res_spat) #
# #write.csv(CBW_dat, "CB_west.csv", row.names = FALSE)
# CBW_dat <- read_csv("CB_west.csv")
#
# #EHE_dat <- fIMOS_MatchMODIS(EHE_dat, pr, res_temp, res_spat) #
# #write.csv(EHE_dat, "EH_east.csv", row.names = FALSE)
# EHE_dat <- read_csv("EH_east.csv")
#
# #EHW_dat <- fIMOS_MatchMODIS(EHW_dat, pr, res_temp, res_spat) #
# #write.csv(EHW_dat, "EH_west.csv", row.names = FALSE)
# EHW_dat <- read_csv("EH_west.csv")
#
# #NSE_dat <- fIMOS_MatchMODIS(NSE_dat, pr, res_temp, res_spat) #
# #write.csv(NSE_dat, "NS_east.csv", row.names = FALSE)
# NSE_dat <- read_csv("NS_east.csv")
#
# #NSW_dat <- fIMOS_MatchMODIS(NSW_dat, pr, res_temp, res_spat) #
# #write.csv(NSW_dat, "NS_west.csv", row.names = FALSE)
# NSW_dat <- read_csv("NS_west.csv")
#
# #DHE_dat <- fIMOS_MatchMODIS(DHE_dat, pr, res_temp, res_spat) #
# #write.csv(DHE_dat, "DH_east.csv", row.names = FALSE)
# DHE_dat <- read_csv("DH_east.csv")
#
#
# #DHW_dat <- fIMOS_MatchMODIS(DHW_dat, pr, res_temp, res_spat) #
# #write.csv(DHW_dat, "DH_west.csv", row.names = FALSE)
# DHW_dat <- read_csv("DH_west.csv")
#
#
# df_list <- list(CBE_dat, CBW_dat, EHE_dat,EHW_dat, NSW_dat, NSE_dat, DHE_dat, DHW_dat) # fill with more later
# dat <- bind_rows(df_list)
#
#
# dat2 <- str_split_fixed(dat$Location, pattern = "_", n = 2)
# dat$Transect <- as.factor(dat2[,1])
# dat$East_West <- as.factor(dat2[,2])
# # Remove data columns that don't match for east and west data
# dat$Location <- NULL
# dat$Latitude <- NULL
# dat$Longitude <- NULL
# head(dat)
#
# datX <- dat %>% spread(key = East_West, value = sst_1d,  fill = NA) %>% mutate(Offshore_Inshore = East - West)
#
# head(datX)
# tail(datX)
# hist(datX$Offshore_Inshore)
# summary(datX$Offshore_Inshore)
# levels(dat$East_West)
# levels(dat$Transect)
#
# datX$Transect <- factor(datX$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
#
# write.csv(datX, "Data/Temp gradient all sites.csv", row.names = F)
datX <- read_csv("Data/Temp gradient all sites.csv")
datX$Transect <- factor(datX$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na() %>% summarise(n = n())
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect) %>% drop_na() %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 5, y = 0.075,
label = paste("Mean: ", round(mean, 1), "\nMedian: ", round(median,1), "\nSD: ", round(sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
head(datX)
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na(Offshore_Inshore) %>% summarise(n = n())
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
dat_sum_all
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), , mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 5, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
ggsave("plots/Inshore_Offshore_Temp_Gradiet.png", height = 21.8, width = 14.8*2, dpi = 600, units = "cm")
datX <- filter(datX, Offshore_Inshore <= 5)
head(datX)
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 5, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
datX <- read_csv("Data/Temp gradient all sites.csv")
datX$Transect <- factor(datX$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
datX <- filter(datX, Offshore_Inshore <= 8)
head(datX)
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 5, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
ggsave("plots/Inshore_Offshore_Temp_Gradiet.png", height = 21.8, width = 14.8*2, dpi = 600, units = "cm")
# Velocity timeseries and comparison to Temp gradient
library(tidyverse)
# dat1 <- read_csv("Data/Velocity Timeseries/IMOS_aggregation_20200117T052356Z.csv")
# dat2 <- read_csv("Data/Velocity Timeseries/IMOS_aggregation_20200117T052633Z.csv")
# dat3 <- read_csv("Data/Velocity Timeseries/IMOS_aggregation_20200117T052729Z.csv")
# dat4 <- read_csv("Data/Velocity Timeseries/IMOS_aggregation_20200117T052821Z.csv")
#
# head(dat1)
#
# dat_list <- list(dat1, dat2, dat3, dat4)
#
# full_dat <- bind_rows(dat_list)
#
# table(full_dat$`LATITUDE (degrees_north)`)
#
# full_dat$Transect <- as.character("")
# full_dat$Transect[full_dat$`LATITUDE (degrees_north)`  == "-31.8"] <- "DiamondHead"
# full_dat$Transect[full_dat$`LATITUDE (degrees_north)`  == "-30"] <- "NorthSolitary"
# full_dat$Transect[full_dat$`LATITUDE (degrees_north)`  == "-29"] <- "EvansHead"
# full_dat$Transect[full_dat$`LATITUDE (degrees_north)`  == "-28.6"] <- "CapeByron"
#
# full_dat$Transect <- factor(full_dat$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
#
# table(full_dat$Transect)
#
# write.csv(full_dat, "Data/Velocity Timeseries/All sites velocity timeseries.csv", row.names = F)
vel_dat <- read_csv("Data/Velocity Timeseries/All sites velocity timeseries.csv")
vel_dat$Date <- vel_dat$`TIME (UTC)`
temp_dat <- read_csv("Data/Temp gradient all sites.csv")
temp_dat <- filter(temp_dat, Offshore_Inshore < 8)
full_dat <- left_join(vel_dat, temp_dat, by =c("Date", "Transect"))
head(full_dat)
full_dat <- full_dat %>% drop_na(Offshore_Inshore)
full_dat$Transect <- factor(full_dat$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
hist(full_dat$`VCUR (m/s)`)
full_dat$V_Current <- full_dat$`VCUR (m/s)`
p1 <- ggplot(full_dat, aes(x = -V_Current, y = Offshore_Inshore)) + geom_point(alpha = 0.4) +
facet_wrap(~Transect) + theme_bw() + geom_smooth(method = "lm") +
xlab("Southward Current (m/s)") + ylab("Offshore - Inshore Temp (deg C)")
p1
ggsave("plots/Southward Current Temp Gradient Relationship.png",
height = 14.8, width = 21, dpi = 600, units = "cm")
cor.test(full_dat$V_Current, full_dat$Offshore_Inshore)
# Looking at the temperature gradient from inner shelf to outer shelf
## Need to get location and date matrix then extract SST from satelites
# As inshore, let's use 15km from shore
library(tidyverse)
# #inshore locations (15 km from shore):
#  # CB - -28.632 , 153.794
#  # EH - -29 , 153.637
#  # NS - -30 , 153.384
#  # DH - -31.75, 153.944
# sitesX <- data.frame(Site = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"),
#                     Latitude_Inshore = c(-28.632, -29, -30, -31.65),
#                     Longitude_Inshore = c(153.794, 153.637, 153.384, 153.944))
#
# # Offshore locations
# library(geosphere)
# destPoint(p = c(sitesX$Longitude_Inshore[1], sitesX$Latitude_Inshore[1]), b = 90, d = 25000)
# destPoint(p = c(sitesX$Longitude_Inshore[2], sitesX$Latitude_Inshore[2]), b = 90, d = 25000)
# destPoint(p = c(sitesX$Longitude_Inshore[3], sitesX$Latitude_Inshore[3]), b = 90, d = 25000)
# destPoint(p = c(sitesX$Longitude_Inshore[4], sitesX$Latitude_Inshore[4]), b = 90, d = 25000)
#
# sitesX$Latitude_Offshore <- c(-28.63176, -28.99976, -29.99975, -31.64973)
# sitesX$Longitude_Offshore <- c(154.0497, 153.8936, 153.6431, 154.2076)
#
# sitesX
#
# # Now make date string
# # let's to 2004 - 2013 (10 years)
#
# Date = seq.Date(from = as.Date("2004-01-01") , to = as.Date("2013-12-31"), by = 1)
#
#
# ### Make a dataframe for each site
# sites = levels(sitesX$Site)
# sites
#
# df_list <- list()
#
# for (i in sites){
#   dat2 <- filter(sitesX, Site == i)
#   assign(paste0("dat_",i,"_West"), data.frame(Longitude = dat2$Longitude_Inshore[1], Latitude = dat2$Latitude_Inshore[1],
#                                               Date =seq.Date(from = as.Date("2004-01-01") , to = as.Date("2013-12-31"), by = 1),
#                                               Location = paste0(i,"_West")))
#   assign(paste0("dat_",i,"_East"), data.frame(Longitude = dat2$Longitude_Offshore[1], Latitude = dat2$Latitude_Offshore[1],
#                                               Date = seq.Date(from = as.Date("2004-01-01") , to = as.Date("2013-12-31"), by = 1),
#                                               Location = paste0(i,"_East")))
# }
#
# # merge into a single dataframe
# df_list <- list(dat_CapeByron_East, dat_CapeByron_West, dat_DiamondHead_East, dat_DiamondHead_West,
#                 dat_EvansHead_East, dat_EvansHead_West, dat_NorthSolitary_East, dat_NorthSolitary_West)
# full_dat <- bind_rows(df_list)
# full_dat$Location <- as.factor(full_dat$Location)
# str(full_dat)
#
#
#
#
# ############################
#
# # Test a smaller dataset (works well)
# #full_dat <- head(full_dat)
#
# # # remove dodgy dates from MODIS
# # full_dat <- filter(full_dat, Date != "2004-12-04")
# # full_dat <- filter(full_dat, Date != "2006-07-05")
# # full_dat <- filter(full_dat, Date != "2007-06-02")
# # full_dat <- filter(full_dat, Date != "2007-12-02")
# #
# #
# CBE_dat <- filter(full_dat, Location == "CapeByron_East")
# CBW_dat <- filter(full_dat, Location == "CapeByron_West")
# DHE_dat <- filter(full_dat, Location == "DiamondHead_East")
# DHW_dat <- filter(full_dat, Location == "DiamondHead_West")
# NSE_dat <- filter(full_dat, Location == "NorthSolitary_East")
# NSW_dat <- filter(full_dat, Location == "NorthSolitary_West")
# EHE_dat <- filter(full_dat, Location == "EvansHead_East")
# EHW_dat <- filter(full_dat, Location == "EvansHead_West")
#
#
# head(full_dat)
#
# ## Load download code
# source("../../../IMOS Data/IMOS_Toolbox/fIMOS_MatchMODIS.R")
# #source("fIMOS_MatchMODIS.R")
#
#
# # Possible products
# # pr <- c("sst_quality", "sst", "picop_brewin2012in", "picop_brewin2010at", "par",
# #         "owtd", "npp_vgpm_eppley_oc3", "npp_vgpm_eppley_gsm", "nanop_brewin2012in",
# #         "nanop_brewin2010at", "l2_flags", "ipar", "dt", "chl_oc3", "chl_gsm", "K_490")
#
# pr <- c("sst") # select products here eg: "chl_oc3", "sst"
# # Set resolutions
# res_temp <- "1d" # temporal resolutions
# res_spat <- 5 # Return the average of res_spat x res_spat pixels
#
# #dat <- fIMOS_MatchMODIS(full_dat, pr, res_temp, res_spat)
# #str(dat)
#
#
#
# #write.csv(dat, "Inshore_Offshore_Gradient.csv", row.names = F)
#
#
#
# #CBE_dat <- fIMOS_MatchMODIS(CBE_dat, pr, res_temp, res_spat) #
# #write.csv(CBE_dat, "CB_east.csv", row.names = FALSE)
# CBE_dat <- read_csv("CB_east.csv")
#
# #CBW_dat <- fIMOS_MatchMODIS(CBW_dat, pr, res_temp, res_spat) #
# #write.csv(CBW_dat, "CB_west.csv", row.names = FALSE)
# CBW_dat <- read_csv("CB_west.csv")
#
# #EHE_dat <- fIMOS_MatchMODIS(EHE_dat, pr, res_temp, res_spat) #
# #write.csv(EHE_dat, "EH_east.csv", row.names = FALSE)
# EHE_dat <- read_csv("EH_east.csv")
#
# #EHW_dat <- fIMOS_MatchMODIS(EHW_dat, pr, res_temp, res_spat) #
# #write.csv(EHW_dat, "EH_west.csv", row.names = FALSE)
# EHW_dat <- read_csv("EH_west.csv")
#
# #NSE_dat <- fIMOS_MatchMODIS(NSE_dat, pr, res_temp, res_spat) #
# #write.csv(NSE_dat, "NS_east.csv", row.names = FALSE)
# NSE_dat <- read_csv("NS_east.csv")
#
# #NSW_dat <- fIMOS_MatchMODIS(NSW_dat, pr, res_temp, res_spat) #
# #write.csv(NSW_dat, "NS_west.csv", row.names = FALSE)
# NSW_dat <- read_csv("NS_west.csv")
#
# #DHE_dat <- fIMOS_MatchMODIS(DHE_dat, pr, res_temp, res_spat) #
# #write.csv(DHE_dat, "DH_east.csv", row.names = FALSE)
# DHE_dat <- read_csv("DH_east.csv")
#
#
# #DHW_dat <- fIMOS_MatchMODIS(DHW_dat, pr, res_temp, res_spat) #
# #write.csv(DHW_dat, "DH_west.csv", row.names = FALSE)
# DHW_dat <- read_csv("DH_west.csv")
#
#
# df_list <- list(CBE_dat, CBW_dat, EHE_dat,EHW_dat, NSW_dat, NSE_dat, DHE_dat, DHW_dat) # fill with more later
# dat <- bind_rows(df_list)
#
#
# dat2 <- str_split_fixed(dat$Location, pattern = "_", n = 2)
# dat$Transect <- as.factor(dat2[,1])
# dat$East_West <- as.factor(dat2[,2])
# # Remove data columns that don't match for east and west data
# dat$Location <- NULL
# dat$Latitude <- NULL
# dat$Longitude <- NULL
# head(dat)
#
# datX <- dat %>% spread(key = East_West, value = sst_1d,  fill = NA) %>% mutate(Offshore_Inshore = East - West)
#
# head(datX)
# tail(datX)
# hist(datX$Offshore_Inshore)
# summary(datX$Offshore_Inshore)
# levels(dat$East_West)
# levels(dat$Transect)
#
# datX$Transect <- factor(datX$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
#
# write.csv(datX, "Data/Temp gradient all sites.csv", row.names = F)
datX <- read_csv("Data/Temp gradient all sites.csv")
datX$Transect <- factor(datX$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
datX <- filter(datX, Offshore_Inshore <= 8)
head(datX)
# count all samples
dat_sum_all <- datX %>% group_by(Transect) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
head(datX)
# count all samples
dat_sum_all <- datX %>% group_by(Transect, Month) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_grid(Month~Transect) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_grid(Transect~Month) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
datX2 <- filter(datX, Transect == "CapeByron")
dat_sum_all <- datX2 %>% group_by(Transect, Month) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX2 %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Month) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
ggsave("plots/Inshore_Offshore_Temp_Gradiet CB Months.png", height = 21.8, width = 14.8*2, dpi = 600, units = "cm")
p1
ggsave("plots/Inshore_Offshore_Temp_Gradiet CB Months.png", height = 21.8, width = 14.8*2, dpi = 600, units = "cm")
# count all samples
datX2 <- filter(datX, Transect == "EvansHead")
dat_sum_all <- datX2 %>% group_by(Transect, Month) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX2 %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Month) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
ggsave("plots/Inshore_Offshore_Temp_Gradiet EH Months.png", height = 21.8, width = 14.8*2, dpi = 600, units = "cm")
# North Solitary
# count all samples
datX2 <- filter(datX, Transect == "NorthSolitary")
dat_sum_all <- datX2 %>% group_by(Transect, Month) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX2 %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Month) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
ggsave("plots/Inshore_Offshore_Temp_Gradiet NS Months.png", height = 21.8, width = 14.8*2, dpi = 600, units = "cm")
# Diamond Head
# count all samples
datX2 <- filter(datX, Transect == "DiamondHead")
dat_sum_all <- datX2 %>% group_by(Transect, Month) %>% drop_na(Offshore_Inshore) %>%
summarise(n = n(), mean = mean(Offshore_Inshore), median = median(Offshore_Inshore), sd = sd(Offshore_Inshore))
dat_sum_all
dat_sum_all$Transect <- factor(dat_sum_all$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
# count all samples with a difference > 1
dat_sum <- datX2 %>% filter(Offshore_Inshore >= 1) %>% group_by(Transect, Month) %>% drop_na() %>%
summarise(n = n())
dat_sum
dat_sum$Transect <- factor(dat_sum$Transect, levels = c("CapeByron", "EvansHead", "NorthSolitary", "DiamondHead"))
p1 <- ggplot(datX, aes(x = Offshore_Inshore)) + geom_histogram(aes(y = stat(count / sum(count))), binwidth = 0.5) +
facet_wrap(~Month) + theme_bw() + geom_vline(aes(xintercept = 0),lty = 2) +
xlab("Offshore - Inshore Temp (deg C)") + ylab("Proportion") +
geom_label(data = dat_sum, aes(x = 4.8, y = 0.075,
label = paste("Mean: ", round(dat_sum_all$mean, 1), "\nMedian: ",
round(dat_sum_all$median,1), "\nSD: ", round(dat_sum_all$sd, 1),
"\n% > 1 deg:", round(n/dat_sum_all$n *100,1))))
p1
ggsave("plots/Inshore_Offshore_Temp_Gradiet DH Months.png", height = 21.8, width = 14.8*2, dpi = 600, units = "cm")
