p1 <- ggplot(mydata, aes(x = Lon, y = -Depth, col = get(i))) + geom_point() +
facet_wrap(~site, scales = "free_x") + theme_bw()
print(p1)
for (i in vars){
p1 <- ggplot(mydata, aes(x = Lon, y = -Depth, col = get(i))) + geom_point() +
facet_wrap(~site, scales = "free_x") + theme_bw()
print(p1)
}
vars = c("NBSSSlope", "NBSSIntercept", "NBSSRsq", "Biomass","GeoMn")
sites = c("DiamondHead", "CapeByron", "NorthSolitary", "EvansHead")
for (i in vars){
p1 <- ggplot(mydata, aes(x = Lon, y = -Depth, col = get(i))) + geom_point() +
facet_wrap(~site, scales = "free_x") + theme_bw()
print(p1)
}
for (j in sites){
mydata2 <- subset(mydata, site == j)
for (i in vars){
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/zoop/',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/zoop/',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
for (j in sites){
mydata2 <- subset(mydata, site == j)
for (i in vars){
mydata2 <- completeFun(mydata2, i)
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/zoop/',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/zoop/',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
#
# ## Maybe try:
install.packages("ContourFunctions")
#
library(ContourFunctions)
cf_data(mydata2$Biomass)
cf_data(mydata2$Lon, mydata2$Biomass)
cf_data(mydata2$Lon, -mydata2$Depth mydata2$Biomass)
cf_data(mydata2$Lon, -mydata2$Depth, mydata2$Biomass)
cf_data(mydata2$Lon, -mydata2$Depth, mydata2$NBSSSlope)
for (j in sites){
mydata2 <- subset(mydata, site == j)
for (i in vars){
mydata2 <- mydata2 %>% drop_na(i) # removes NA in the variable we are interested in
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/zoop/',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/zoop/',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
library(tidyr)
for (j in sites){
mydata2 <- subset(mydata, site == j)
for (i in vars){
mydata2 <- mydata2 %>% drop_na(i) # removes NA in the variable we are interested in
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/zoop/',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/zoop/',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
#Read OPC transect
#import OPC data and make spatial
OPC	<- read.csv("data/MNF_2004_Summary_050419.csv", header=TRUE, sep=",", dec=".", fill=TRUE)
#add column for site
OPC <- OPC %>%
dplyr::mutate(site = ifelse(between(Lat, -28.7, -28.4), "CapeByron",
ifelse(between(Lat, -29.1, -28.8), "EvansHead",
ifelse(between(Lat, -30.5,-29.5),"NorthSolitary",
ifelse(between(Lat, -32, -31.5), "DiamondHead","error")))))
#add column for site
library(dplyr)
OPC <- OPC %>%
dplyr::mutate(site = ifelse(between(Lat, -28.7, -28.4), "CapeByron",
ifelse(between(Lat, -29.1, -28.8), "EvansHead",
ifelse(between(Lat, -30.5,-29.5),"NorthSolitary",
ifelse(between(Lat, -32, -31.5), "DiamondHead","error")))))
head(OPC)
str(OPC)
for (j in sites){
mydata2 <- subset(OPC, site == j)
for (i in vars){
mydata2 <- mydata2 %>% drop_na(i) # removes NA in the variable we are interested in
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/zoop/',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/zoop/',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = log10(mydata2$Biomass))
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
---
title: "Data Exploration"
author: "Peter Yates"
date: "`r format(Sys.time(), '%d %B, %Y')`"
output: html_document
---
### This document applies the protocol for data exploration by Zuur et al 2010 (doi 10.1111/j.2041-210X.2009.00001.x).
This includes:
* Collinearity
* Relationships between x variables
* Relationships between x and y variables
* Interactions - are any apparent and is there enough data to test for them?
* Independence - I suspect these data violate this assumption hence I'll include a spatial autocorrelation term and looking for spatial dependence in model residuals.
* Outliers in x and y and x~y
* Homogeneity and balance accross factor levels and two-way factor-level combinations
* Occurence of zeros and NAs
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning =F)
```
```{r, include=F}
#Load packages
lapply(c("R.matlab","knitr","RODBC","MASS",
"tweedie", "nlme", "statmod","mgcv",
"raster", "lattice", "ggplot2",
"fields","rgdal", "plyr","dplyr",
"gdata", "gstat","car","visreg","tidyr",
"plotrix","hexbin", "R.matlab", "ggmap","viridis",
"weathermetrics", "chron", "RColorBrewer","lattice",
"ncdf4", "geosphere", "maptools", "sp", "oce", "pracma",
"gridExtra", "maps", "mapdata", "sp", "rgeos", "lubridate"), require, character.only = TRUE)
#Source Highland Statistics code
source("code/HighstatLibV6.R")
#read data
df	<- read.csv("data/IntegratedData_300419.csv", header=TRUE, sep=",", dec=".", fill=TRUE)
#select variables
df <- df %>% select(datestr, datenum, Lat, Lon, site, site2, Depth, Temp, Salt, NBSSSlope,NBSSIntercept, NBSSRsq, Biomass, Abundance, GeoMn, fluorescence, oxygen, salinity, saldiff, temperature, tempdiff, Nitrate, Phosphate, Silicate, U, V, distance, GA_depth2, slope, D_coast)
#remove ambiguity
df$CTDtemp <- df$temperature
df$temperature <- NULL
df$CTDsalinity <- df$salinity
df$salinity <- NULL
#remove data from 10th September
#make StartUTC a date:
df$time <- as.POSIXct(df$datestr, tz = "UTC", format =  "%d-%b-%Y %H:%M:%S", optional=F)
#remove second tow at North Solitary on 10th September
df$date <- day(df$time) #all rows are september
df<- df %>% dplyr::filter(date != 10)
#filter biomass
df<- df %>% dplyr::filter(Biomass < 2000)
```
```{r, include = F}
#create Vbin, Ubin at Dbin
#v: <-0.6 strong southward /// -0.6<v<-0.3 average southward /// -0.3<v<0.3 weak /// 0.3<v<0.6 average northward  /// 0.6<v strong northward
df <- df %>%
dplyr::mutate(Vbin = ifelse(V < -0.6, "Strong_S",
ifelse(between(V, -0.6, -0.3), "Average_S",
ifelse(between(V, -0.30001,0.3),"Weak_NS",
ifelse(between(V, 0.30001,0.6), "Average_N",
ifelse(V > 0.6, "Strong_N","error"))))))
#u: <-0.6 strong westward /// -0.6<u<-0.3 average westward /// -0.3<u<0.3 weak /// 0.3<v<0.6 average eastward  /// 0.6<u strong eastward
df <- df %>%
dplyr::mutate(Ubin = ifelse(U < -0.6, "Strong_W",
ifelse(between(U, -0.6, -0.3), "Average_W",
ifelse(between(U, -0.30001,0.3),"Weak_EW",
ifelse(between(U, 0.30001,0.6), "Average_E",
ifelse(U > 0.6, "Strong_E","error"))))))
#Dbin
plot(table(df$Depth))
df <- df %>%
dplyr::mutate(Dbin = ifelse(between(Depth, 0, 25), "0_25",
ifelse(between(Depth, 26, 55), "26_55",
ifelse(between(Depth, 56,85),"56_85",
ifelse(between(Depth, 86,115), "85_115", "error")))))
df$Dbin <- as.factor(df$Dbin)
#plot(df$Depth, df$Dbin, col=df$Dbin)
#table(df$Dbin, useNA = "always")
#plot(df[df$site2 == "DH",]$Lon, -df[df$site2 == "DH",]$Depth, col=df[df$site2 == "DH",]$Dbin)
```
```{r}
Chl <- c(1.1796725,
0.8578775,
0.51298,
0.5505,
0.4280475,
0.891985,
1.273043333,
1.670508333,
0.51120875,
1.001765,
0.866155,
0.7128275,
0.70814875,
0.06619125,
2.1826175,
2.1050925,
1.8943175,
1.2405825,
0.88925375,
1.034285,
0.87250875,
0.9854775,
1.0142125,
1.2324425,
0.57284625,
0.67676,
0.841388333,
3.39752)
fluorescence <- c(57.74,
54.74,
53.66,
54.95,
55.57,
57.4,
58.37,
62.83,
56.38,
57.69,
56.86,
55.64,
56.69,
59.59,
58.88,
61.9,
62.38,
62.75,
56.59,
57.06,
56.82,
55.85,
55.99,
60.61,
54.96,
56.41,
56,
62.36)
mdl <- lm(Chl ~ fluorescence)
summary(mdl)
plot(x=fluorescence, y=Chl)
abline(lm(Chl ~ fluorescence))
new <- data.frame(fluorescence = df$fluorescence)
chla <- predict(object = mdl, newdata = new, se.fit = TRUE)
df$chla <- chla$fit
pred.w.plim <- predict(mdl, new, interval="prediction")
pred.w.clim <- predict(mdl, new, interval="confidence")
matplot(new$fluorescence,cbind(pred.w.clim, pred.w.plim[,-1]),
lty=c(1,2,2,3,3), type="l", ylab="predicted y")
```
### Relationships between variables
#### Scatterplots and Pearson correlations amoung continuous x vars
NB: Order of the plots is from North - South (CB, EH, NS, DH), followed by all sites pooled. CB did not have a CTD tow done hence it's pairplot contains fewer variables.
Based on these plots I am removing:
* Salt (as measured by the SeaSoar. It is correlated with Temp),
* D_coast (correlated with GA_depth),
* Phosphate and Silicate (correlated with Nitrate).
Keep an eye on:
* fluorescense~oxygen (oxygen is omitted later)
* fluorescense~nitrate (all good, actually I ommit Nitrate later based on variance inflation factors)
* Temp~nitrate (ditto)
```{r,echo=F, fig.height = 10, fig.width =15}
MyVar <- c("Temp","Salt", "fluorescence","oxygen", "Nitrate","Phosphate", "Silicate", "GA_depth2", "D_coast")
MyVarCB <- c("Temp","Salt", "GA_depth2", "D_coast")
#pdf('3plots/Pairs.pdf', width = 20, height =15)
Mypairs(df[df$site2 == "CB", MyVarCB])
Mypairs(df[df$site2 == "EH", MyVar])
Mypairs(df[df$site2 == "NS", MyVar])
Mypairs(df[df$site2 == "DH", MyVar])
Mypairs(df[, MyVar])
#dev.off()
```
library(akima)
mydata <- read.csv("Data/ADP_tows_final_300419.csv")
str(mydata)
head(mydata)
vars = c("U", "V")
sites = c("DH", "NS", "EH", "CB")
for (i in vars){
p1 <- ggplot(mydata, aes(x = Lon, y = -Depth, col = get(i))) + geom_point() +
facet_wrap(~OPC_site, scales = "free_x") + theme_bw()
print(p1)
}
mydata2 <- subset(mydata, OPC_site == "EH")
str(mydata2)
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
for (i in vars){
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.png'), width=10, height=5, res = 600)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
for (i in vars){
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.png'), width=6000, height=3000, res = 600)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
for (i in vars){
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.png'), width=6000, height=3000, res = 600)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
install.packages("ggquiver")
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
for (i in vars){
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, colour.palette = "RdBu", plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.png'), width=6000, height=3000, res = 600)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
for (i in vars){
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE), plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.png'), width=6000, height=3000, res = 600)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
for (i in vars){
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE), plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE), plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE), plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.png'), width=6000, height=3000, res = 600)
print(contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE), plot.title = title(main = c(j, i))))
dev.off()
}
}
warnings()
filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE), plot.title = title(main = c(j, i)))
filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE), plot.title = title(main = c(j, i)))
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE), plot.title = title(main = c(j, i)))
filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE))
filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE))
filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE))
filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE))
filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE))
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
for (i in vars){
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$Lon, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE),
zlim = c(min(mydata[[i]]), max(mydata[[i]])), plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, color.palette = function(n) hcl.colors(n, "RdBu", rev = TRUE),
zlim = c(min(mydata[[i]]), max(mydata[[i]])), plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/ADCP/ADCP_',j,"_",i,'_lines.png'), width=6000, height=3000, res = 600)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
# Interpolating plots
#install.packages("akima")
library(akima)
library(ggplot2)
library(reshape2)
mydata <- read.csv("Data/HYD cleaned 080419.csv")
str(mydata)
head(mydata)
# variables to loop through
vars = c("CTD.Sal", "CTD.Temp", "Oxygen", "Silicate","Nitrate")
#sites to loop through
sites = c("DH", "NS", "EH")
# # Testing
# for (i in vars){
#
#   p1 <- ggplot(mydata, aes(x = long3, y = -Depth, col = get(i))) + geom_point() +
#     facet_wrap(~OPC_site, scales = "free_x") + theme_bw()
#   print(p1)
# }
# mydata2 <- subset(mydata, OPC_site == "EH")
# str(mydata2)
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
for (i in vars){
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, zlim = c(min(mydata[[i]]), max(mydata[[i]])),
plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
for (i in vars){
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/CTD/',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, zlim = c(min(mydata[[i]]), max(mydata[[i]])),
plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/CTD/',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
for (j in sites){
mydata2 <- subset(mydata, OPC_site == j)
for (i in vars){
#fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2$CTD.Sal)
fit1 <- interp(x = mydata2$long3, y = -mydata2$Depth, z = mydata2[[i]])
pdf(paste0('plots/CTD/',j,"_",i,'.pdf'), width=10, height=5)
print(filled.contour(fit1, zlim = c(min(mydata[[i]]), max(mydata[[i]])),
plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/CTD/',j,"_",i,'.png'), width=6000, height=3000, res = 600)
print(filled.contour(fit1, zlim = c(min(mydata[[i]]), max(mydata[[i]])),
plot.title = title(main = c(j, i))))
dev.off()
pdf(paste0('plots/CTD/',j,"_",i,'_lines.pdf'), width=10, height=5)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
png(paste0('plots/CTD/',j,"_",i,'_lines.png'), width=6000, height=3000, res = 600)
print(contour(fit1, plot.title = title(main = c(j, i))))
dev.off()
}
}
