pB <- ggplot(mydata_b, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10))+
ggtitle('B) Biomass')
pB
# NBSS Slope only plot
mydata_s <- mydata %>% filter(Parameter == "NBSS Slope")
pC <- ggplot(mydata_s, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("") +
geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
scale_y_continuous(breaks=c(1,1.2,1.4,1.6,1.8), limits = c(0.9,1.8), expand = c(0,0))+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text.x = element_text(colour = "black", size = 10),
axis.text.y = element_text(color = "black", size=10))+
ggtitle('C) Size Spectra Slope')
pC
library(patchwork)
p_final <- P_map + pA + pB + pC + plot_layout(ncol = 1, guides = 'collect')
p_final
#ggsave("multiplot test.png", dpi = 600, units = "in", height = 10, width = 3.5)
p_final2 <-  pA + pB + pC + P_map + plot_layout(ncol = 2, widths = c(1, 1))
p_final2
#ggsave("multiplot test square.png", dpi = 600, units = "cm", height = 14.8, width = 21)
## Attempt to plot a table in ggplot
#library(gridExtra)
mydata3 <- mydata2 %>% select(`Reference Number`, Region, Study)
mydata3 <- mydata3 %>% distinct(`Reference Number`, .keep_all = TRUE)
mydata3 <- mydata3 %>% rename("Ref. #" = `Reference Number`)
mydata3
tt2 <- gridExtra::ttheme_minimal(base_size = 9, padding = unit(c(1.5,1.5),"mm"))
t_test <- (pA + pB + pC) / (P_map + gridExtra::tableGrob(mydata3, theme = tt2, rows = NULL)) + plot_layout(heights = c(0.69,1))
t_test
ggsave("Other prepublication stuff/plots/multiplot final.png", dpi = 600, units = "cm", height = 14.8, width = 21)
ggsave("Other prepublication stuff/plots/multiplot final.pdf", dpi = 600, units = "cm", height = 14.8, width = 21)
### Note one author name edited later to get correct symbol.
P_map
theme(axis.text = element_text(colour="black", face="bold"),
axis.title = element_text(face="bold"),
axis.ticks = element_text(colour="black"))
P_map
P_map <- ggplot() +
geom_sf(data = world, col="grey70", fill = "grey70") +
geom_point(data = mydata2, aes(x = Longitude, y = Latitude), size = 1.5,
shape = 21, fill = "blue") +
geom_text_repel(data = mydata2, aes(x = Longitude, y = Latitude, label = `Reference Number`),col="black", size =3.5, fontface = "bold") +
theme_bw() +
scale_x_continuous(expand=c(0,0)) + scale_y_continuous(expand=c(0,0)) +
theme(axis.text = element_text(colour="black"),
axis.title = element_text(face="bold"),
axis.ticks = element_text(colour="black"))
P_map
P_map <- ggplot() +
geom_sf(data = world, col="grey70", fill = "grey70") +
geom_point(data = mydata2, aes(x = Longitude, y = Latitude), size = 1.5,
shape = 21, fill = "blue") +
geom_text_repel(data = mydata2, aes(x = Longitude, y = Latitude, label = `Reference Number`),col="black", size =3.5, fontface = "bold") +
theme_bw() +
scale_x_continuous(expand=c(0,0)) + scale_y_continuous(expand=c(0,0)) +
theme(axis.text = element_text(colour="black"),
axis.title = element_text(face="bold"))#,
P_map
P_map <- ggplot() +
geom_sf(data = world, col="grey70", fill = "grey70") +
geom_point(data = mydata2, aes(x = Longitude, y = Latitude), size = 1.5,
shape = 21, fill = "blue") +
geom_text_repel(data = mydata2, aes(x = Longitude, y = Latitude, label = `Reference Number`),col="black", size =3.5, fontface = "bold") +
theme_bw() +
scale_x_continuous(expand=c(0,0)) + scale_y_continuous(expand=c(0,0)) +
theme(axis.text = element_text(colour="black"),
axis.title = element_text(face="bold"),
axis.ticks = element_line(colour="black"))
P_map
# Multi-study plots
library(tidyverse)
library(ggrepel)
mydata <- read_csv("Data/Mulistudy plot data.csv")
head(mydata)
mydata$extra <- 1
# The palette:
cbPalette <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
cbPalette2 <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999')
set.seed(1)
p1 <- ggplot(mydata, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
facet_wrap(~Parameter, scales = "free_y", ncol = 1) + theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("Inshore:Offshore Ratio") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60")+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10),
strip.text = element_text(face = "bold", size = 11),
legend.title = element_text(face = "bold", size = 11),
panel.background = element_rect(fill = NA, color = "black"))
p1
#ggsave("../Plots/Multistudy plot.png", dpi = 600, height = 12, width = 12, units = "cm")
# World map
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "small", returnclass = "sf")
class(world)
# 1 row per study
mydata2 <- mydata %>% distinct(`Reference Number`, .keep_all = TRUE)
P_map <- ggplot() +
geom_sf(data = world, col="grey70", fill = "grey70") +
geom_point(data = mydata2, aes(x = Longitude, y = Latitude), size = 1.5,
shape = 21, fill = "blue") +
geom_text_repel(data = mydata2, aes(x = Longitude, y = Latitude, label = `Reference Number`),col="black", size =3.5, fontface = "bold") +
theme_bw() +
scale_x_continuous(expand=c(0,0)) + scale_y_continuous(expand=c(0,0)) +
theme(axis.text = element_text(colour="black"),
axis.title = element_text(face="bold"),
axis.ticks = element_line(colour="black"))
P_map
#ggsave("world map test.png", dpi = 600, units = "cm", height = 12.8, width = 21)
# Abundance only plot
mydata_a <- mydata %>% filter(Parameter == "Abundance")
pA <- ggplot(mydata_a, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("Inshore:Offshore Ratio") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
scale_y_log10(breaks = c(1,3,10,20, 25))+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10)) +
ggtitle('A) Abundance')
pA
# Biomass only plot
mydata_b <- mydata %>% filter(Parameter == "Biomass")
pB <- ggplot(mydata_b, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10))+
ggtitle('B) Biomass')
pB
# NBSS Slope only plot
mydata_s <- mydata %>% filter(Parameter == "NBSS Slope")
pC <- ggplot(mydata_s, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("") +
geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
scale_y_continuous(breaks=c(1,1.2,1.4,1.6,1.8), limits = c(0.9,1.8), expand = c(0,0))+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text.x = element_text(colour = "black", size = 10),
axis.text.y = element_text(color = "black", size=10))+
ggtitle('C) Size Spectra Slope')
pC
library(patchwork)
p_final <- P_map + pA + pB + pC + plot_layout(ncol = 1, guides = 'collect')
p_final
#ggsave("multiplot test.png", dpi = 600, units = "in", height = 10, width = 3.5)
p_final2 <-  pA + pB + pC + P_map + plot_layout(ncol = 2, widths = c(1, 1))
p_final2
#ggsave("multiplot test square.png", dpi = 600, units = "cm", height = 14.8, width = 21)
## Attempt to plot a table in ggplot
#library(gridExtra)
mydata3 <- mydata2 %>% select(`Reference Number`, Region, Study)
mydata3 <- mydata3 %>% distinct(`Reference Number`, .keep_all = TRUE)
mydata3 <- mydata3 %>% rename("Ref. #" = `Reference Number`)
mydata3
tt2 <- gridExtra::ttheme_minimal(base_size = 9, padding = unit(c(1.5,1.5),"mm"))
t_test <- (pA + pB + pC) / (P_map + gridExtra::tableGrob(mydata3, theme = tt2, rows = NULL)) + plot_layout(heights = c(0.69,1))
t_test
ggsave("Other prepublication stuff/plots/multiplot final.png", dpi = 600, units = "cm", height = 14.8, width = 21)
ggsave("Other prepublication stuff/plots/multiplot final.pdf", dpi = 600, units = "cm", height = 14.8, width = 21)
### Note two author names edited later to get correct symbol.
library(tidyverse)
library(ggrepel)
mydata <- read_csv("Data/Mulistudy plot data.csv")
head(mydata)
mydata$extra <- 1
# The palette:
cbPalette <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
cbPalette2 <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999')
set.seed(1)
p1 <- ggplot(mydata, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
facet_wrap(~Parameter, scales = "free_y", ncol = 1) + theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("Inshore:Offshore Ratio") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60")+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10),
strip.text = element_text(face = "bold", size = 11),
legend.title = element_text(face = "bold", size = 11),
panel.background = element_rect(fill = NA, color = "black"))
p1
#ggsave("../Plots/Multistudy plot.png", dpi = 600, height = 12, width = 12, units = "cm")
# World map
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "small", returnclass = "sf")
class(world)
# 1 row per study
mydata2 <- mydata %>% distinct(`Reference Number`, .keep_all = TRUE)
P_map <- ggplot() +
geom_sf(data = world, col="grey70", fill = "grey70") +
geom_point(data = mydata2, aes(x = Longitude, y = Latitude), size = 1.5,
shape = 21, fill = "blue") +
geom_text_repel(data = mydata2, aes(x = Longitude, y = Latitude, label = `Reference Number`),col="black", size =3.5, fontface = "bold") +
theme_bw() +
scale_x_continuous(expand=c(0,0)) + scale_y_continuous(expand=c(0,0)) +
theme(axis.text = element_text(colour="black"),
axis.title = element_text(face="bold"),
axis.ticks = element_line(colour="black"))
P_map
#ggsave("world map test.png", dpi = 600, units = "cm", height = 12.8, width = 21)
# Abundance only plot
mydata_a <- mydata %>% filter(Parameter == "Abundance")
pA <- ggplot(mydata_a, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("Inshore:Offshore Ratio") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
scale_y_log10(breaks = c(1,3,10,20, 25))+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10)) +
ggtitle('A) Abundance')
pA
# Biomass only plot
mydata_b <- mydata %>% filter(Parameter == "Biomass")
pB <- ggplot(mydata_b, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10))+
ggtitle('B) Biomass')
pB
# NBSS Slope only plot
mydata_s <- mydata %>% filter(Parameter == "NBSS Slope")
pC <- ggplot(mydata_s, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("") +
geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
scale_y_continuous(breaks=c(1,1.2,1.4,1.6,1.8), limits = c(0.9,1.8), expand = c(0,0))+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text.x = element_text(colour = "black", size = 10),
axis.text.y = element_text(color = "black", size=10))+
ggtitle('C) Size Spectra Slope')
pC
pC <- ggplot(mydata_s, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("") +
geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
scale_y_continuous(breaks=c(1,1.2,1.4,1.6,1.8), limits = c(0.45,1.8), expand = c(0,0))+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text.x = element_text(colour = "black", size = 10),
axis.text.y = element_text(color = "black", size=10))+
ggtitle('C) Size Spectra Slope')
pC
pC <- ggplot(mydata_s, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("") +
geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
scale_y_continuous(breaks=c(0.5,0.75, 1,1.25,1.5,1.75), limits = c(0.45,1.8), expand = c(0,0))+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text.x = element_text(colour = "black", size = 10),
axis.text.y = element_text(color = "black", size=10))+
ggtitle('C) Size Spectra Slope')
pC
# Multi-study plots
library(tidyverse)
library(ggrepel)
mydata <- read_csv("Data/Mulistudy plot data.csv")
head(mydata)
mydata$extra <- 1
# The palette:
cbPalette <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
cbPalette2 <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999')
set.seed(1)
p1 <- ggplot(mydata, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
facet_wrap(~Parameter, scales = "free_y", ncol = 1) + theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("Inshore:Offshore Ratio") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60")+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10),
strip.text = element_text(face = "bold", size = 11),
legend.title = element_text(face = "bold", size = 11),
panel.background = element_rect(fill = NA, color = "black"))
p1
#ggsave("../Plots/Multistudy plot.png", dpi = 600, height = 12, width = 12, units = "cm")
# World map
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "small", returnclass = "sf")
class(world)
# 1 row per study
mydata2 <- mydata %>% distinct(`Reference Number`, .keep_all = TRUE)
P_map <- ggplot() +
geom_sf(data = world, col="grey70", fill = "grey70") +
geom_point(data = mydata2, aes(x = Longitude, y = Latitude), size = 1.5,
shape = 21, fill = "blue") +
geom_text_repel(data = mydata2, aes(x = Longitude, y = Latitude, label = `Reference Number`),col="black", size =3.5, fontface = "bold") +
theme_bw() +
scale_x_continuous(expand=c(0,0)) + scale_y_continuous(expand=c(0,0)) +
theme(axis.text = element_text(colour="black"),
axis.title = element_text(face="bold"),
axis.ticks = element_line(colour="black"))
P_map
#ggsave("world map test.png", dpi = 600, units = "cm", height = 12.8, width = 21)
# Abundance only plot
mydata_a <- mydata %>% filter(Parameter == "Abundance")
pA <- ggplot(mydata_a, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("Inshore:Offshore Ratio") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
scale_y_log10(breaks = c(1,3,10,20, 25))+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10)) +
ggtitle('A) Abundance')
pA
# Biomass only plot
mydata_b <- mydata %>% filter(Parameter == "Biomass")
pB <- ggplot(mydata_b, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("") + geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(colour = "black", size = 10))+
ggtitle('B) Biomass')
pB
# NBSS Slope only plot
mydata_s <- mydata %>% filter(Parameter == "NBSS Slope")
pC <- ggplot(mydata_s, aes(y = Ratio, x = Bathy, label = `Reference Number`)) + geom_point(size = 2) +
theme_classic() + geom_hline(yintercept = 1, col= "red", lty=2) +
ylab("") +
geom_errorbarh(aes(xmin=Inhore_Bath, xmax=Offshore_Bathy), col = "grey60",height=0)+
scale_x_log10()+ xlab("Bathymetry (m)") + geom_text_repel(col="blue")+
scale_y_continuous(breaks=c(0.5,0.75, 1,1.25,1.5,1.75), limits = c(0.45,1.8), expand = c(0,0))+
#scale_color_manual(values=cbPalette) +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text.x = element_text(colour = "black", size = 10),
axis.text.y = element_text(color = "black", size=10))+
ggtitle('C) Size Spectra Slope')
pC
library(patchwork)
p_final <- P_map + pA + pB + pC + plot_layout(ncol = 1, guides = 'collect')
p_final
#ggsave("multiplot test.png", dpi = 600, units = "in", height = 10, width = 3.5)
p_final2 <-  pA + pB + pC + P_map + plot_layout(ncol = 2, widths = c(1, 1))
p_final2
#ggsave("multiplot test square.png", dpi = 600, units = "cm", height = 14.8, width = 21)
## Attempt to plot a table in ggplot
#library(gridExtra)
mydata3 <- mydata2 %>% select(`Reference Number`, Region, Study)
mydata3 <- mydata3 %>% distinct(`Reference Number`, .keep_all = TRUE)
mydata3 <- mydata3 %>% rename("Ref. #" = `Reference Number`)
mydata3
tt2 <- gridExtra::ttheme_minimal(base_size = 9, padding = unit(c(1.5,1.5),"mm"))
t_test <- (pA + pB + pC) / (P_map + gridExtra::tableGrob(mydata3, theme = tt2, rows = NULL)) + plot_layout(heights = c(0.69,1))
t_test
ggsave("Other prepublication stuff/plots/multiplot final.png", dpi = 600, units = "cm", height = 14.8, width = 21)
ggsave("Other prepublication stuff/plots/multiplot final.pdf", dpi = 600, units = "cm", height = 14.8, width = 21)
### Note two author names edited later to get correct symbol.
library(akima)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(patchwork)
library(metR)
library(geosphere)
mydata <- read_csv("Data/SS2004_SeaSoarData.csv")
str(mydata)
head(mydata)
mydata <- mydata %>%
mutate(site = case_when(site = str_detect(File,"SS0408_023") ~ "CapeByron",
site = str_detect(File,"SS0408_021") ~ "EvansHead",
site = str_detect(File,"SS0408_010") ~ "NorthSolitary",
site = str_detect(File,"SS0408_008") ~ "DiamondHead"),
site = as.factor(site))
mydata <- subset(mydata, Depth > 13)
# # Make summary table of transects (where and when)
# library(lubridate)
# mydata$datestr <- dmy_hms(mydata$datestr)
#
# sum_table <- mydata %>% group_by(site) %>% summarise(start_lon = min(Lon), end_lon = max(Lon),
#                                                      start_time = min(datestr), end_time = max(datestr))
# sum_table
#
# sum_table$start_time_local <- with_tz(sum_table$start_time, tzone = "Australia/Sydney")
# sum_table$end_time_local <- with_tz(sum_table$end_time, tzone = "Australia/Sydney")
#
# sum_table
#
# #write.csv(sum_table, "Transect Summary table.csv", row.names = F)
#
# # get Latitudes to go with start and ends
# sum_dat2 <- mydata %>% filter(site == "Cape Byron (28.6° S)")
# sum_dat2 <- mydata %>% filter(site == "Evans Head (29° S)")
# sum_dat2 <- mydata %>% filter(site == "North Solitary (30° S)")
# sum_dat2 <- mydata %>% filter(site == "Diamond Head (31.75° S)")
### Get distance from shore
mydata$Distance_Coast = 0
for (i in 1:nrow(mydata)){
if (mydata$site[i] == "CapeByron") {
mydata$Distance_Coast[i] = distm(c(153.58, -28.6), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "DiamondHead") {
mydata$Distance_Coast[i] = distm(c(152.75, -31.8), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "EvansHead") {
mydata$Distance_Coast[i] = distm(c(153.48, -29.0), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
if (mydata$site[i] == "NorthSolitary") {
mydata$Distance_Coast[i] = distm(c(153.23, -30.0), c(mydata$Lon[i], mydata$Lat[i]), fun = distHaversine)
}
}
### Get Bathymetry and add distance from coast
Bathy <- read.csv("Data/Transect Bathymetry.csv", header = T)
Bathy <- subset(Bathy, Bathymetry < -1 & Bathymetry >= -200)
Bathy$Distance_Coast = 0
for (i in 1:nrow(Bathy)){
if (Bathy$site[i] == "CapeByron") {
Bathy$Distance_Coast[i] = distm(c(153.58, -28.6), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "DiamondHead") {
Bathy$Distance_Coast[i] = distm(c(152.75, -31.8), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "EvansHead") {
Bathy$Distance_Coast[i] = distm(c(153.48, -29.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
if (Bathy$site[i] == "NorthSolitary") {
Bathy$Distance_Coast[i] = distm(c(153.23, -30.0), c(Bathy$Longitude[i], Bathy$Latitude[i]), fun = distHaversine)
}
}
# # variables to loop through
# vars = c("Temp", "Salt","GeoMn")# "NBSS.Slope",
# #sites to loop through
sites <- levels(mydata$site)
sites <- sites[c(1,3,4,2)]
#label_list <- c("Cape Byron (28.6° S)", "Evans Head (29° S)", "North Solitary (30° S)", "Diamond Head (31.75° S)")
site_labels <- c("Cape Byron (28.6°S)", "Evans Head (29°S)" ,"North Solitary (30°S)", "Diamond Head (31.7°S)")
letters <- c("A) ", "B) ", "C) ", "D) " )
### Biomass interpoLation and plots
pl <- list()
for (j in 1:length(sites)){
mydata2 <- mydata %>%
filter(site == sites[j] & is.na(Depth) == FALSE & is.na(Biomass)==FALSE) %>%
select(c(Distance_Coast, Depth, Biomass, cast_no, Temp))
# Get the max depth of each cast
Limits <- mydata2 %>%
group_by(cast_no) %>%
summarise(maxD = max(Depth),
minD = min(Depth),
Distance_Coast = Distance_Coast[1]) %>%
ungroup()
Limits2 <- tibble(maxD = c(150, 150),
minD = c(0, 0),
Distance_Coast = c(max(Limits$Distance_Coast), min(Limits$Distance_Coast)),
cast_no = c(max(Limits$cast_no), max(Limits$cast_no)))
Limits <- Limits[order(Limits$Distance_Coast),]
Limits <- rbind(Limits, Limits2)
Bathy2 <- filter(Bathy, site == sites[j])
fit1 <- with(mydata2, akima::interp(x = Distance_Coast, y = -Depth, z = Biomass, nx = 100, ny = 100))
fit2 <- with(mydata2, interp(x = Distance_Coast, y = -Depth, z = Temp, nx = 100, ny = 100))
df <- melt(fit1$z, na.rm = TRUE)
names(df) <- c("x", "y", "Biomass")
df$Distance_Coast <- fit1$x[df$x]
df$Depth <- fit1$y[df$y]
df2 <- melt(fit2$z, na.rm = TRUE)
names(df2) <- c("x", "y", "Temp")
df$Temp <- df2$Temp
pl[[j]] <- ggplot(data = df, mapping = aes(x = Distance_Coast/1000, y = Depth, z = (Biomass))) +
geom_tile(aes(fill = Biomass)) + ylab("Depth (m)") +
geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 0.25, size = 0.2) +
geom_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), colour = "grey10", binwidth = 1, size = 0.5) +
geom_text_contour(aes(x = Distance_Coast/1000, y = Depth, z = Temp), breaks = seq(16, 25)) +
scale_fill_distiller(palette = "Spectral", direction = -1, limits = c(10,  1000), oob = scales::squish, trans = "log10",
name=expression(bold("Biomass "(mg~m^-3)))) + #
geom_line(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth), alpha = 0.5, size = 0.2) +
geom_point(data = mydata2, mapping = aes(x = Distance_Coast/1000, y = -Depth, alpha = 0.5), size = 0.1, show.legend = FALSE) +
geom_ribbon(data= Bathy2, aes(x = Distance_Coast/1000, ymax = Bathymetry, ymin=-200), inherit.aes = FALSE, fill = "grey60") +
geom_text(x = 12.010, y = -120, label = paste0(letters[j],"Biomass at \n", site_labels[j]), stat = "identity", inherit.aes = FALSE, hjust = 0) +
theme_classic() +
theme(plot.margin = unit(c(0,0,0,0), "mm"),
axis.text  = element_text(colour="black"),
axis.title = element_text(face = "bold")) +
xlab(element_blank()) +
coord_cartesian(xlim = c(13, 48), expand = TRUE, ylim = c(-140,-10)) +
#scale_x_continuous(limits = c(12, 48), expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = c(-125,-100,-75,-50,-25)) +
#theme(legend.title.align = 0)+
guides(size = "none", shape = "none") +
theme(legend.title = element_text(angle = 270, hjust= 0.5, size = 12),
axis.title = element_text(face = "bold")) + guides(fill = guide_colorbar(title.position = "right"))
# + geom_polygon(data = Limits, mapping = aes(x = Distance_Coast, y = -maxD), inherit.aes = FALSE, colour = "white")
}
pl[[4]] <- pl[[4]] + xlab("Distance from Coastline (km)")
pl[[1]] + pl[[2]] + pl[[3]] + pl[[4]] + plot_layout(ncol = 1, guides = 'collect') & theme(legend.key.height = unit(3.9, "cm"))
pl[[4]]
ggsave("grant test plot.png", units = "cm", width = 20, height = 6. dpi = 600)
ggsave("grant test plot.png", units = "cm", width = 20, height = 6, dpi = 600)
